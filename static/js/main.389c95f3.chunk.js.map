{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckOutSummary/CheckOutSummary.module.css","containers/CheckOut/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","components/hoc/withErrorHandler/withErrorHandle.js","components/store/actions/auth.js","components/store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","components/store/actions/burgerBuilder.js","components/store/actions/order.js","components/Order/CheckOutSummary/CheckOutSummary.js","components/UI/Input/Input.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/CheckOut.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","components/store/utility.js","components/store/reducers/burgerBuilder.js","components/store/reducers/order.js","components/store/reducers/auth.js","index.js"],"names":["module","exports","logo","props","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClass","SideDrawer","open","push","Close","Fragment","closed","join","Layout","sideDrawerClosedHandler","setState","showSideDrawer","menuClickHandler","oldState","state","this","Content","Component","connect","auth","token","burgerIngrendient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","burgerIngredients","Object","keys","ingredients","map","el","Array","_","i","BurgerIngredient","key","reduce","arr","concat","length","Burger","buildControl","BuildControl","Label","label","Less","clickedRemove","disabled","More","clickedAdd","controls","buildControls","BuildControls","price","toFixed","ctrl","disableInfo","OrderButton","purchasable","purchasing","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","igkey","textTransform","totalPrice","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","loader","withErrorHandler","Wrapper","errorConfirmHandler","error","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","email","password","isSignup","dispatch","authData","returnSecureToken","url","post","then","userId","expirationTime","data","idToken","localId","expiresIn","console","log","setTimeout","catch","err","BurgerBuilder","updatePurchaseState","updatedIngredients","sum","purchaseHandler","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","ings","orderSummary","onIngredientAdded","onIngredientRemoved","React","burgerBuilder","ingName","ingredientName","get","checkOutSummary","CheckOutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","inValid","shouldValidate","touched","Invalid","elementType","onChange","changed","elementConfig","value","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","minLength","maxLength","valid","street","zipcode","country","deliverMethod","formIsValid","loading","checkValidity","rules","isValid","trim","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedForm","updatedFormElement","target","inputIdentifierElement","formElementArray","id","config","form","onSubmit","Input","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","CheckOut","goBack","replace","summary","puchasedRedirect","purchased","path","match","component","amount","ingredientOutput","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchOrders","fetchOrdersFail","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthHandler","prevState","Spinner","errorMessage","authRedirect","Logout","onLogout","App","Boolean","window","location","hostname","updateObject","oldObject","updateProperties","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updateIngredient","updatedState","removeIngredient","setIngredients","fetchIngredient","reducer","newOrder","authStart","authSuccess","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,qBCAxUD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,mBCAjJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,gBCAhGD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,2B,gBCAvID,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,iBCAjID,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,mBCAnFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,0BCA7FD,EAAOC,QAAU,CAAC,QAAU,0B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCDzBD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,gBAAkB,2C,iBCApCD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B,iBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,gBCA3DD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,gBCAzED,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,sB,uQCYrCC,EARF,SAACC,GAAD,OAET,yBAAKC,UAAWC,IAAQC,KAAMC,MAAO,CAACC,OAAOL,EAAMK,SAC/C,yBAAKC,IAAKC,IAAYC,IAAI,gB,0CCAnBC,EAJQ,SAACT,GAAD,OACvB,wBAAIC,UAAWC,IAAQQ,gBAAgB,kBAAC,IAAD,CAASC,GAAIX,EAAMY,KAAMC,MAAOb,EAAMa,MAAOC,gBAAiBZ,IAAQa,QAASf,EAAMgB,YCW7GC,EAZS,SAACjB,GAAD,OAEpB,wBAAIC,UAAWC,IAAQgB,iBACnB,kBAACR,EAAD,CAAgBE,KAAK,IAAIC,OAAK,GAA9B,kBACCb,EAAMmB,gBAAkB,kBAACT,EAAD,CAAgBE,KAAK,WAArB,UAAwD,KAC/EZ,EAAMmB,gBAER,kBAACT,EAAD,CAAgBE,KAAK,WAArB,UADA,kBAACF,EAAD,CAAgBE,KAAK,SAArB,U,iBCEOQ,EARM,SAACpB,GAAD,OACjB,yBAAKC,UAAWC,IAAQmB,aAAcC,QAAStB,EAAMuB,SACjD,8BACA,8BACA,gCCaOC,EAdC,SAACxB,GAAD,OACZ,4BAAQC,UAAWC,IAAQuB,SACvB,kBAACJ,EAAD,CAAcE,QAASvB,EAAMuB,UAE7B,yBAAKtB,UAAWC,IAAQC,MACpB,kBAACA,EAAD,OAGJ,yBAAKF,UAAWC,IAAQwB,aACpB,kBAACR,EAAD,CAAiBC,gBAAiBnB,EAAM2B,Y,kCCTrCC,EAJE,SAAC5B,GAAD,OACbA,EAAM6B,KAAO,yBAAK5B,UAAWC,IAAQ4B,SAAUR,QAAStB,EAAMuB,UAAkB,MC2BrEQ,EAxBG,SAAC/B,GAEf,IAAMgC,EAAgB,CAAC9B,IAAQ+B,YAK/B,OAJIjC,EAAMkC,MACNF,EAAcG,KAAKjC,IAAQkC,OAI3B,kBAAC,IAAMC,SAAP,KACI,kBAACP,EAAD,CAAUD,KAAM7B,EAAMkC,KAAMX,QAASvB,EAAMsC,SAC3C,yBAAKrC,UAAW+B,EAAcO,KAAK,MAC/B,yBAAKtC,UAAWC,IAAQC,MACpB,kBAACA,EAAD,OAEJ,6BACI,kBAACe,EAAD,CAAiBC,gBAAiBnB,EAAM2B,a,OChBtDa,E,YAEF,WAAYxC,GAAO,IAAD,8BACd,4CAAMA,KAMVyC,wBAA0B,WACtB,EAAKC,SAAS,CACVC,gBAAe,KATL,EAalBC,iBAAmB,WACf,IAAMC,EAAW,EAAKC,MAAMH,eAC5B,EAAKD,SAAS,CACVC,gBAAgBE,KAdpB,EAAKC,MAAM,CACPH,gBAAe,GAHL,E,sEAsBd,OACI,kBAAC,IAAMN,SAAP,KACI,kBAACZ,EAAD,CACAE,OAAQoB,KAAK/C,MAAMmB,gBACnBI,QAASwB,KAAKH,mBACd,kBAACX,EAAD,CACAN,OAAQoB,KAAK/C,MAAMmB,gBACnBe,KAAMa,KAAKD,MAAMH,eACjBL,OAAQS,KAAKN,0BACb,0BAAMxC,UAAWC,IAAQ8C,SACpBD,KAAK/C,MAAMgB,e,GAlCXiC,aAgDNC,eAPS,kBAAM,SAAAJ,GAC1B,MAAO,CACH3B,gBAAqC,MAApB2B,EAAMK,KAAKC,UAKrBF,CAAyBV,G,kDCNzBa,EAzCW,SAACrD,GACvB,IAAIsD,EAAa,KAEjB,OAAQtD,EAAMuD,MACV,IAAK,eACDD,EAAa,yBAAKrD,UAAWC,IAAQsD,cACrC,MACJ,IAAK,YACDF,EACI,yBAAKrD,UAAWC,IAAQuD,UACpB,yBAAKxD,UAAWC,IAAQwD,SACxB,yBAAKzD,UAAWC,IAAQyD,UAGhC,MACJ,IAAK,OACDL,EAAa,yBAAKrD,UAAWC,IAAQ0D,OACrC,MACJ,IAAK,SACDN,EAAa,yBAAKrD,UAAWC,IAAQ2D,SACrC,MACJ,IAAK,QACDP,EAAa,yBAAKrD,UAAWC,IAAQ4D,QACrC,MACJ,IAAK,QACDR,EAAa,yBAAKrD,UAAWC,IAAQ6D,QACrC,MACJ,QACIT,EAAa,KAGrB,OAAOA,GCVIU,EAxBA,SAAChE,GAGZ,IAAIiE,EAAoBC,OAAOC,KAAKnE,EAAMoE,aAAaC,KAAI,SAACC,GACxD,OAAO,YAAIC,MAAMvE,EAAMoE,YAAYE,KAAMD,KAAI,SAACG,EAAEC,GAC5C,OAAO,kBAACC,EAAD,CAAkBC,IAAKL,EAAGG,EAAGlB,KAAMe,UAE/CM,QAAO,SAACC,EAAIP,GACX,OAAOO,EAAIC,OAAOR,KACpB,IAKF,OAJ+B,IAA5BL,EAAkBc,SACjBd,EAAkB,wDAIlB,yBAAKhE,UAAWC,IAAQ8E,QACpB,kBAACN,EAAD,CAAkBnB,KAAK,cACtBU,EACD,kBAACS,EAAD,CAAkBnB,KAAK,mB,kCCPpB0B,EAZM,SAACjF,GAClB,OACI,yBAAKC,UAAWC,IAAQgF,cACpB,yBAAKjF,UAAWC,IAAQiF,OAAQnF,EAAMoF,OACtC,4BAAQnF,UAAWC,IAAQmF,KAAM/D,QAAS,kBAAMtB,EAAMsF,cAActF,EAAMuD,OAAOgC,SAAUvF,EAAMuF,UAAjG,QACA,4BAAQtF,UAAWC,IAAQsF,KAAMlE,QAAS,kBAAMtB,EAAMyF,WAAWzF,EAAMuD,QAAvE,UCHNmC,GAAU,CACZ,CAACN,MAAM,QAAQ7B,KAAK,SACpB,CAAC6B,MAAM,QAAQ7B,KAAK,SACpB,CAAC6B,MAAM,SAAS7B,KAAK,UACrB,CAAC6B,MAAM,OAAO7B,KAAK,SAuBRoC,GAlBO,SAAC3F,GAGnB,OACI,yBAAKC,UAAWC,IAAQ0F,eACpB,4CAAkB5F,EAAM6F,MAAMC,QAAQ,IACrCJ,GAASrB,KAAI,SAAA0B,GAAI,OAAI,kBAACb,EAAD,CAAcP,IAAKoB,EAAKX,MAAOA,MAAOW,EAAKX,MAAOK,WAAYzF,EAAMyF,WAAYH,cAAetF,EAAMsF,cAAeC,SAAUvF,EAAMgG,YAAYD,EAAKxC,MAAOA,KAAMwC,EAAKxC,UAC7L,4BAAQtD,UAAWC,IAAQ+F,YAC3BV,UAAWvF,EAAMkG,YACjB5E,QAAStB,EAAMmG,YACbnG,EAAM2B,OAAS,YAAc,sB,oBCM5ByE,G,8LAvBWC,EAAUC,GAC5B,OAAOD,EAAUxE,OAAQkB,KAAK/C,MAAM6B,MAAQwE,EAAUrF,WAAa+B,KAAK/C,MAAMgB,W,+BAI9E,OACI,kBAAC,IAAMqB,SAAP,KACI,kBAACP,EAAD,CAAUD,KAAMkB,KAAK/C,MAAM6B,KAAMN,QAASwB,KAAK/C,MAAMuG,cACrD,yBAAKtG,UAAWC,KAAQkG,MAAOhG,MAAO,CACtCoG,UAAUzD,KAAK/C,MAAM6B,KAAO,gBAAkB,qBAC9C4E,QAAS1D,KAAK/C,MAAM6B,KAAO,EAAI,IAE9BkB,KAAK/C,MAAMgB,e,GAfRiC,a,oBCMLyD,GALA,SAAC1G,GAAD,OACX,4BAAQC,UAAW,CAACC,KAAQyG,OAAOzG,KAAQF,EAAM4G,UAAUrE,KAAK,KAAMgD,SAAUvF,EAAMuF,SAAUjE,QAAStB,EAAMuB,SAAUvB,EAAMgB,WC4BpH6F,G,iLA1BF,IAAD,OACEC,EAAoB5C,OAAOC,KAAKpB,KAAK/C,MAAMoE,aAAaC,KAAI,SAAA0C,GAC9D,OACI,wBAAIpC,IAAKoC,GAAO,0BAAM3G,MAAO,CAAC4G,cAAc,eAAgBD,GAA5D,IAA2E,EAAK/G,MAAMoE,YAAY2C,OAG1G,OACI,kBAAC,IAAM1E,SAAP,KACI,0CACA,gFACA,4BACKyE,GAEL,2BAAG,+CAAqB/D,KAAK/C,MAAMiH,WAAWnB,QAAQ,KACtD,qDACA,kBAACa,GAAD,CAAQC,QAAQ,SAASrF,QAASwB,KAAK/C,MAAMkH,mBAA7C,UACA,kBAACP,GAAD,CAAQC,QAAQ,UAAUrF,QAASwB,KAAK/C,MAAMmH,mBAA9C,iB,GApBWlE,a,oBCEZmE,GAJEC,KAAMC,OAAO,CAC1BC,QAAQ,8C,oBCUGC,GAVC,SAACxH,GAEb,OACI,yBAAKC,UAAWC,KAAQuH,UC4CjBC,GA/CU,SAACC,EAAQN,GAC9B,mBAEI,WAAYrH,GAAO,IAAD,8BACd,4CAAMA,KAuBV4H,oBAAsB,WAClB,EAAKlF,SAAS,CACVmF,MAAM,QAxBV,EAAK/E,MAAQ,CACT+E,MAAM,MAHI,EAFtB,kFASyB,IAAD,OAChB9E,KAAK+E,eAAiBT,EAAMU,aAAaC,QAAQC,KAAI,SAAAC,GAIjD,OAHA,EAAKxF,SAAS,CACVmF,MAAM,OAEHK,KAEXnF,KAAKoF,eAAiBd,EAAMU,aAAaK,SAASH,KAAI,SAAAI,GAAG,OAAIA,KAAI,SAAAR,GAC7D,EAAKnF,SAAS,CAACmF,MAAMA,SAjBjC,6CAsBQR,EAAMU,aAAaC,QAAQM,MAAMvF,KAAK+E,gBACtCT,EAAMU,aAAaK,SAASE,MAAMvF,KAAKoF,kBAvB/C,+BAiCQ,OACI,kBAAC,IAAM9F,SAAP,KACA,kBAAC,GAAD,CAAOR,KAAMkB,KAAKD,MAAM+E,MAAOtB,YAAaxD,KAAK6E,qBAC5C7E,KAAKD,MAAM+E,MAAQ9E,KAAKD,MAAM+E,MAAMU,QAAQ,MAEjD,kBAACZ,EAAY5E,KAAK/C,YAtC9B,GAAqBiD,cCqCZE,GAAO,SAACqF,EAAMC,EAASC,GAChC,OAAO,SAAAC,GACHA,EAvCG,CACHpF,KCSkB,eD8BlB,IAAMqF,EAAW,CACbJ,MAAMA,EACNC,SAASA,EACTI,mBAAkB,GAElBC,EAAM,wGACPJ,IACCI,EAAM,qHAEVzB,KAAM0B,KAAKD,EAAIF,GACdI,MAAK,SAAAX,GA5Ca,IAACjF,EAAM6F,EAqBDC,EAwBrBP,GA7CgBvF,EA6CKiF,EAAIc,KAAKC,QA7CRH,EA6CgBZ,EAAIc,KAAKE,QA5ChD,CACH9F,KCIoB,eDHpB6F,QAAQhG,EACR6F,OAAOA,KA0CHN,GAzBqBO,EAyBKb,EAAIc,KAAKG,UAxB3CC,QAAQC,IAAIN,GACL,SAAAP,GACHc,YAAW,WACPd,EATD,CACHpF,KCVmB,kBDmBA,IAAjB2F,SAsBDQ,OAAM,SAAAC,GACHhB,EAxCD,CACHpF,KCLiB,YDMjBsE,MAsCsB8B,EAAIvB,SAASe,KAAKtB,aE5C1C+B,G,YAEF,WAAY5J,GAAO,IAAD,8BACd,4CAAMA,KAUV6J,oBAAsB,SAACC,GACnB,IAAM1F,EAAW,eACV0F,GAKP,OAHY5F,OAAOC,KAAKC,GAAaQ,QAAO,SAACmF,EAAIzF,GAC7C,OAAOyF,EAAM3F,EAAYE,KAC3B,GACW,GAlBC,EAqBlB0F,gBAAkB,WACX,EAAKhK,MAAMmB,gBACV,EAAKuB,SAAS,CACVyD,YAAW,IAGf,EAAKnG,MAAMiK,QAAQ9H,KAAK,UA3Bd,EAgClB+H,sBAAwB,WACpB,EAAKxH,SAAS,CAACyD,YAAW,KAjCZ,EAoClBgE,wBAA0B,WACtB,EAAKnK,MAAMoK,iBACX,EAAKpK,MAAMiK,QAAQ9H,KAAK,cApCxB,EAAKW,MAAO,CACRqD,YAAW,GAHD,E,iFAQdpD,KAAK/C,MAAMqK,sB,+BAiCX,IAAMrE,EAAW,eACVjD,KAAK/C,MAAMsK,MAElB,IAAK,IAAI3F,KAAOqB,EACZA,EAAYrB,GAAOqB,EAAYrB,IAAQ,EAG3C,IAAI4F,EAAe,KAGfvG,EAASjB,KAAK/C,MAAM6H,MAAQ,2DAAsC,kBAAC,GAAD,MAqBtE,OAnBG9E,KAAK/C,MAAMsK,OACVtG,EACI,kBAAC,IAAM3B,SAAP,KACI,kBAAC2C,EAAD,CAAQZ,YAAarB,KAAK/C,MAAMsK,OAChC,kBAAC,GAAD,CACI7E,WAAY1C,KAAK/C,MAAMwK,kBACvBlF,cAAevC,KAAK/C,MAAMyK,oBAC1BzE,YAAaA,EACbH,MAAO9C,KAAK/C,MAAMiH,WAClBf,YAAanD,KAAK8G,oBAAoB9G,KAAK/C,MAAMsK,MACjDnE,WAAYpD,KAAKiH,gBACjBrI,OAAQoB,KAAK/C,MAAMmB,mBAI/BoJ,EAAe,kBAAC,GAAD,CAActD,WAAYlE,KAAK/C,MAAMiH,WAAY7C,YAAarB,KAAK/C,MAAMsK,KAAMpD,kBAAmBnE,KAAKmH,sBAAuB/C,kBAAmBpE,KAAKoH,2BAKrK,kBAAC,IAAM9H,SAAP,KACI,kBAAC,GAAD,CAAOR,KAAMkB,KAAKD,MAAMqD,WAAYI,YAAaxD,KAAKmH,uBACrDK,GAEAvG,O,GA/EW0G,IAAMzH,WA6GnBC,gBAtBS,SAAAJ,GACpB,MAAO,CACHwH,KAAKxH,EAAM6H,cAAcvG,YACzB6C,WAAWnE,EAAM6H,cAAc1D,WAC/BY,MAAM/E,EAAM+E,MACZ1G,gBAAqC,OAArB2B,EAAMK,KAAKC,UAKR,SAAAuF,GACvB,MAAO,CACH6B,kBAAmB,SAACI,GAAD,OAAajC,EC7G7B,CACHpF,KFNqB,kBEOrBsH,eD2G+DD,KAC/DH,oBAAqB,SAACG,GAAD,OAAajC,ECvG/B,CACHpF,KFZwB,qBEaxBsH,eDqGoED,KACpEP,kBAAkB,kBAAM1B,GCpFrB,SAAAA,GACHtB,GAAMyD,IAAI,qBACT9B,MAAK,SAAAX,GACFM,EAhBD,CACHpF,KFlBqB,kBEmBrBa,YAc2BiE,EAAIc,UAE9BO,OAAM,SAAA7B,GACHc,EAZD,CACHpF,KFxB8B,oCCkH9B6G,eAAgB,kBAAMzB,EE5EnB,CACHpF,KHlCoB,sBCoHbL,CAA4CwE,GAAiBkC,GAAcvC,K,oBGvG3E0D,GAhBS,SAAC/K,GACrB,OACI,yBAAKC,UAAWC,KAAQ8K,iBACpB,uDACA,yBAAK5K,MAAO,CAAC6K,MAAM,OAAOC,OAAO,SAC7B,kBAAClG,EAAD,CAAQZ,YAAapE,EAAMoE,eAE/B,kBAACuC,GAAD,CAAQC,QAAQ,SAASrF,QAASvB,EAAMmL,mBAAxC,UACA,kBAACxE,GAAD,CAAQC,QAAQ,UAAUrF,QAASvB,EAAMoL,mBAAzC,c,iDCkCGC,GA3CD,SAACrL,GAEX,IAAIsL,EAAe,KACbC,EAAe,CAACrL,KAAQsL,cAI9B,OAHGxL,EAAMyL,SAAWzL,EAAM0L,gBAAkB1L,EAAM2L,SAC9CJ,EAAapJ,KAAKjC,KAAQ0L,SAEvB5L,EAAM6L,aACT,IAAK,QACDP,EAAa,yCAAOrL,UAAWsL,EAAahJ,KAAK,KAAMuJ,SAAU9L,EAAM+L,SAAa/L,EAAMgM,cAA7E,CAA4FC,MAAOjM,EAAMiM,SACtH,MACJ,IAAK,WACDX,EAAa,4CAAUrL,UAAWsL,EAAahJ,KAAK,KAAMuJ,SAAU9L,EAAM+L,SAAa/L,EAAMgM,cAAhF,CAA+FC,MAAOjM,EAAMiM,SACzH,MACJ,IAAK,SACDX,EAAa,4BACTrL,UAAWsL,EAAahJ,KAAK,KAAMuJ,SAAU9L,EAAM+L,QACnDE,MAAOjM,EAAMiM,OACRjM,EAAMgM,cAAcE,QAAQ7H,KAAI,SAAA8H,GAAM,OAC/B,4BACIxH,IAAKwH,EAAOF,MACZA,MAAOE,EAAOF,OACbE,EAAOC,kBAM5B,MACJ,QACId,EAAa,yCAAOrL,UAAWsL,EAAahJ,KAAK,KAAMuJ,SAAU9L,EAAM+L,SAAa/L,EAAMgM,cAA7E,CAA4FC,MAAOjM,EAAMiM,SAI9H,OACI,6BACI,2BAAOhM,UAAWC,KAAQiF,OAAQnF,EAAMoF,OACvCkG,IC/BPe,G,2MAGFvJ,MAAM,CACFwJ,UAAU,CACNC,KAAK,CACDV,YAAY,QACZG,cAAc,CACVzI,KAAK,OACLiJ,YAAY,aAEhBP,MAAM,GACNQ,WAAW,CACPC,UAAS,EACTC,UAAU,EACVC,UAAU,GAEdC,OAAM,EACNlB,SAAQ,GAEZmB,OAAO,CACHjB,YAAY,QACZG,cAAc,CACVzI,KAAK,OACLiJ,YAAY,eAEhBP,MAAM,GACNQ,WAAW,CACPC,UAAS,EACTC,UAAU,EACVC,UAAU,GAEdC,OAAM,EACNlB,SAAQ,GAEZoB,QAAQ,CACJlB,YAAY,QACZG,cAAc,CACVzI,KAAK,OACLiJ,YAAY,gBAEhBP,MAAM,GACNQ,WAAW,CACPC,UAAS,EACTC,UAAU,EACVC,UAAU,GAEdC,OAAM,EACNlB,SAAQ,GAEZqB,QAAQ,CACJnB,YAAY,QACZG,cAAc,CACVzI,KAAK,OACLiJ,YAAY,gBAEhBP,MAAM,GACNQ,WAAW,CACPC,UAAS,EACTC,UAAU,EACVC,UAAU,GAEdC,OAAM,EACNlB,SAAQ,GAEZnD,MAAM,CACFqD,YAAY,QACZG,cAAc,CACVzI,KAAK,QACLiJ,YAAY,cAEhBP,MAAM,GACNQ,WAAW,CACPC,UAAS,EACTC,UAAU,GAEdE,OAAM,EACNlB,SAAQ,GAEZsB,cAAc,CACVpB,YAAY,SACZG,cAAc,CACVE,QAAQ,CACJ,CAACD,MAAM,UAAUG,aAAa,WAC9B,CAACH,MAAM,WAAWG,aAAa,cAGvCK,WAAW,GACXR,MAAM,UACNY,OAAM,IAGdK,aAAY,EACZC,SAAQ,G,EAIZC,cAAgB,SAACnB,EAAMoB,GACnB,IAAIC,GAAU,EAUd,OATGD,EAAMX,WACLY,EAA2B,KAAjBrB,EAAMsB,QAAiBD,GAElCD,EAAMV,YACLW,EAAUrB,EAAMlH,QAAUsI,EAAMV,WAAaW,GAE9CD,EAAMT,YACLU,EAAUrB,EAAMlH,QAAUsI,EAAMT,WAAaU,GAE1CA,G,EAGXE,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAMC,EAAW,GACjB,IAAI,IAAIC,KAAyB,EAAK9K,MAAMwJ,UACxCqB,EAASC,GAAwB,EAAK9K,MAAMwJ,UAAUsB,GAAuB3B,MAEjF,IAAM4B,EAAQ,CACVzJ,YAAY,EAAKpE,MAAMoE,YACvByB,MAAM,EAAK7F,MAAMiH,WACjB6G,UAAUH,GAGd,EAAK3N,MAAM+N,cAAcF,EAAM,EAAK7N,MAAMoD,Q,EAI9C4K,oBAAqB,SAACP,EAAMQ,GAExB,IAAMC,EAAW,eACV,EAAKpL,MAAMwJ,WAEZ6B,EAAkB,eACjBD,EAAYD,IAEnBE,EAAmBlC,MAAQwB,EAAMW,OAAOnC,MACxCkC,EAAmBtB,MAAQ,EAAKO,cAAce,EAAmBlC,MAAMkC,EAAmB1B,YAC1F0B,EAAmBxC,SAAQ,EAC3BuC,EAAYD,GAAmBE,EAC/B,IAAIjB,GAAc,EAClB,IAAK,IAAImB,KAA0BH,EAC/BhB,EAAcgB,EAAYG,GAAwBxB,OAASK,EAE/D,EAAKxK,SAAS,CACV4J,UAAU4B,EACVhB,YAAYA,K,wEAKX,IAAD,OAEEoB,EAAmB,GACzB,IAAI,IAAI3J,KAAO5B,KAAKD,MAAMwJ,UACtBgC,EAAiBnM,KAAK,CAClBoM,GAAG5J,EACH6J,OAAOzL,KAAKD,MAAMwJ,UAAU3H,KAGpC,IAAI8J,EACA,0BAAMC,SAAU3L,KAAKyK,cAChBc,EAAiBjK,KAAI,SAAAC,GAAE,OAAK,kBAACqK,GAAD,CAC7BjD,eAAgBpH,EAAGkK,OAAO/B,WAC1BhB,SAAUnH,EAAGkK,OAAO3B,MACpBlB,QAASrH,EAAGkK,OAAO7C,QACnBI,QAAS,SAAC0B,GAAD,OAAW,EAAKO,oBAAoBP,EAAMnJ,EAAGiK,KACtD5J,IAAKL,EAAGiK,GACR1C,YAAavH,EAAGkK,OAAO3C,YACvBG,cAAe1H,EAAGkK,OAAOxC,cACzBC,MAAO3H,EAAGkK,OAAOvC,WAGjB,kBAACtF,GAAD,CAAQC,QAAQ,UAAUrB,UAAWxC,KAAKD,MAAMoK,aAAhD,SACCnK,KAAKD,MAAMoK,aAOpB,OAJInK,KAAK/C,MAAMmN,UACXsB,EAAO,kBAAC,GAAD,OAIP,yBAAKxO,UAAWC,KAAQmM,aACpB,uDACCoC,O,GAvLS/D,IAAMzH,WA+MjBC,gBAjBS,SAAAJ,GACpB,MAAM,CACFsB,YAAYtB,EAAM6H,cAAcvG,YAChC6C,WAAWnE,EAAM6H,cAAc1D,WAC/BkG,QAAQrK,EAAM+K,MAAMV,QACpB/J,MAAMN,EAAMK,KAAKC,UAME,SAAAuF,GACvB,MAAO,CACHoF,cAAc,SAACD,GAAD,OAAenF,EH3LP,SAACmF,EAAU1K,GACrC,OAAO,SAAAuF,GACHA,EAVG,CACHpF,KHd2B,0BGwB3B8D,GAAM0B,KAAK,qBAAqB3F,EAAM0K,GACrC9E,MAAK,SAAAZ,GACFO,EA5ByB,SAAC4F,EAAGT,GACrC,MAAO,CACHvK,KHC6B,0BGA7BqL,QAAQL,EACRT,UAAUA,GAwBGe,CAAsBzG,EAASe,KAAKoD,KAAKuB,OAErDpE,OAAM,SAAA7B,GACHc,EAxBsB,SAACd,GAC/B,MAAO,CACHtE,KHL4B,yBGM5BsE,MAAMA,GAqBOiH,CAAmBjH,QGmLMkH,CAAuBjB,QAItD5K,CAA4CwE,GAAiB2E,GAAYhF,KCnNlF2H,G,2MAEF7D,kBAAoB,WAChB,EAAKnL,MAAMiK,QAAQgF,U,EAGvB7D,kBAAmB,WACf,EAAKpL,MAAMiK,QAAQiF,QAAQ,2B,wEAM3B,IAAIC,EAAU,kBAAC,KAAD,CAAUxO,GAAG,MAC3B,GAAGoC,KAAK/C,MAAMoE,YAAY,CAEtB,IAAMgL,EAAmBrM,KAAK/C,MAAMqP,UAAY,kBAAC,KAAD,CAAU1O,GAAG,MAAQ,KACrEwO,EACI,6BACKC,EACD,kBAACpE,GAAD,CAAiBG,kBAAmBpI,KAAKoI,kBAAmBC,kBAAmBrI,KAAKqI,kBAAmBhH,YAAarB,KAAK/C,MAAMoE,cAC/H,kBAAC,KAAD,CAAOkL,KAAMvM,KAAK/C,MAAMuP,MAAMD,KAAO,gBACrCE,UAAWnD,MAIvB,OAAO8C,M,GA1BQlM,aA2CRC,gBAZS,SAAAJ,GACpB,MAAM,CACFsB,YAAYtB,EAAM6H,cAAcvG,YAChCiL,UAAUvM,EAAM+K,MAAMwB,aASfnM,CAAyB8L,I,oBCZzBnB,GAlCD,SAAC7N,GAEX,IAAMoE,EAAc,GACpB,IAAI,IAAIyG,KAAkB7K,EAAMoE,YAC5BA,EAAYjC,KAAK,CACboK,KAAK1B,EACL4E,OAAOzP,EAAMoE,YAAYyG,KAIjC,IAAM6E,EAAmBtL,EAAYC,KAAI,SAACC,GAC1C,OAAO,0BACKlE,MAAO,CACH4G,cAAc,aACd2I,QAAQ,eACRzE,OAAO,QACP0E,OAAO,iBACPC,QAAQ,OAEZlL,IAAKL,EAAGiI,MAAOjI,EAAGiI,KARvB,IAQ8BjI,EAAGmL,OARjC,QAYP,OACI,yBAAKxP,UAAWC,KAAQ4P,OACpB,0CAAgBJ,GAChB,oCAAS,uCAAaK,OAAOC,WAAWhQ,EAAM6F,OAAOC,QAAQ,OCrBnEmK,G,4LAIElN,KAAK/C,MAAMkQ,cAAcnN,KAAK/C,MAAMoD,S,+BAIpC,IAAI+M,EAAS,kBAAC,GAAD,MAYb,OAXIpN,KAAK/C,MAAMmN,UACXgD,EACI,6BACKpN,KAAK/C,MAAMmQ,OAAO9L,KAAI,SAACC,GACpB,OACI,kBAACwL,GAAD,CAAOnL,IAAKL,EAAGiK,GAAInK,YAAaE,EAAGF,YAAayB,MAAOvB,EAAGuB,aAMvEsK,M,GApBMlN,aAuCNC,gBAfS,SAAAJ,GACpB,MAAM,CACFqK,QAAQrK,EAAM+K,MAAMV,QACpBgD,OAAOrN,EAAM+K,MAAMsC,OACnB/M,MAAMN,EAAMK,KAAKC,UAIE,SAAAuF,GACvB,MAAO,CACHuH,cAAc,SAAC9M,GAAD,OAAWuF,ENyBH,SAACvF,GAC3B,OAAO,SAAAuF,GACHA,EAPE,CACFpF,KHrDwB,sBG4DxB8D,GAAMyD,IAAI,qBAAqB1H,GAC9B4F,MAAK,SAAAX,GACF,IAAM+H,EAAc,GACpB,IAAI,IAAIzL,KAAO0D,EAAIc,KACfiH,EAAYjO,KAAZ,eACOkG,EAAIc,KAAKxE,GADhB,CAEI4J,GAAG5J,KAGXgE,EA/BD,CACHpF,KHtC0B,sBGuC1B4M,OA6BgCC,OAE/B1G,OAAM,SAAA7B,GACHc,EA5BmB,SAACd,GAC5B,MAAO,CACHtE,KH5CuB,mBG6CvBsE,MAAMA,GAyBOwI,CAAgBxI,QMxCKkH,CAAuB3L,QAKlDF,CAA4CwE,GAAiBuI,GAAO5I,K,6BCtC7EiJ,G,2MAEFxN,MAAQ,CACJ4C,SAAS,CACL8C,MAAM,CACFqD,YAAY,QACZG,cAAc,CACVzI,KAAK,QACLiJ,YAAY,gBAEhBP,MAAM,GACNQ,WAAW,CACPC,UAAS,GAEbG,OAAM,EACNlB,SAAQ,GAEZlD,SAAS,CACLoD,YAAY,QACZG,cAAc,CACVzI,KAAK,WACLiJ,YAAY,YAEhBP,MAAM,GACNQ,WAAW,CACPC,UAAS,EACTC,UAAU,GAEdE,OAAM,EACNlB,SAAQ,IAGhBjD,UAAS,G,EAGb0E,cAAgB,SAACnB,EAAMoB,GACnB,IAAIC,GAAU,EAUd,OATGD,EAAMX,WACLY,EAA2B,KAAjBrB,EAAMsB,QAAiBD,GAElCD,EAAMV,YACLW,EAAUrB,EAAMlH,QAAUsI,EAAMV,WAAaW,GAE9CD,EAAMT,YACLU,EAAUrB,EAAMlH,QAAUsI,EAAMT,WAAaU,GAE1CA,G,EAGXU,oBAAsB,SAACP,EAAM8C,GACzB,IAAMC,EAAe,eACd,EAAK1N,MAAM4C,SADG,gBAEhB6K,EAFgB,eAGV,EAAKzN,MAAM4C,SAAS6K,GAHV,CAIbtE,MAAMwB,EAAMW,OAAOnC,MACnBY,MAAM,EAAKO,cAAcK,EAAMW,OAAOnC,MAAM,EAAKnJ,MAAM4C,SAAS6K,GAAa9D,YAC7Ed,SAAQ,MAGhB,EAAKjJ,SAAS,CAACgD,SAAS8K,K,EAG5BC,cAAe,SAAChD,GACZA,EAAMC,iBACN,EAAK1N,MAAM0Q,OAAO,EAAK5N,MAAM4C,SAAS8C,MAAMyD,MAAM,EAAKnJ,MAAM4C,SAAS+C,SAASwD,MAAM,EAAKnJ,MAAM4F,W,EAGpGiI,kBAAoB,WAChB,EAAKjO,UAAS,SAAAkO,GACV,MAAO,CACHlI,UAAUkI,EAAUlI,c,wEAKvB,IAAD,OACE4F,EAAmB,GACzB,IAAI,IAAI3J,KAAO5B,KAAKD,MAAM4C,SACtB4I,EAAiBnM,KAAK,CAClBoM,GAAG5J,EACH6J,OAAOzL,KAAKD,MAAM4C,SAASf,KAInC,IAAI8J,EAAOH,EAAiBjK,KAAI,SAAAC,GAAE,OAC9B,kBAACqK,GAAD,CACIhK,IAAKL,EAAGiK,GACR7C,eAAgBpH,EAAGkK,OAAO/B,WAC1BhB,SAAUnH,EAAGkK,OAAO3B,MACpBlB,QAASrH,EAAGkK,OAAO7C,QACnBI,QAAS,SAAC0B,GAAD,OAAW,EAAKO,oBAAoBP,EAAMnJ,EAAGiK,KACtD1C,YAAavH,EAAGkK,OAAO3C,YACvBG,cAAe1H,EAAGkK,OAAOxC,cACzBC,MAAO3H,EAAGkK,OAAOvC,WAKtBlJ,KAAK/C,MAAMmN,UACVsB,EAAO,kBAACoC,GAAD,OAGX,IAAIC,EAAe,KAChB/N,KAAK/C,MAAM6H,QACViJ,EAAgB,2BAAI/N,KAAK/C,MAAM6H,MAAMU,UAGzC,IAAIwI,EAAe,KAKnB,OAJGhO,KAAK/C,MAAMmB,kBACV4P,EAAe,kBAAC,KAAD,CAAUpQ,GAAG,OAI5B,yBAAKV,UAAWC,KAAQoQ,MACnBS,EACAD,EACD,0BAAMpC,SAAU3L,KAAK0N,eAChBhC,EACD,kBAAC9H,GAAD,CAAQC,QAAQ,WAAhB,WAEJ,kBAACD,GAAD,CAAQC,QAAQ,SAASrF,QAASwB,KAAK4N,mBAAvC,aAAqE5N,KAAKD,MAAM4F,SAAW,UAAY,gB,GAxHpGzF,aA6IJC,gBAfS,SAAAJ,GACpB,MAAO,CACHqK,QAAQrK,EAAMK,KAAKgK,QACnBtF,MAAM/E,EAAMK,KAAK0E,MACjB1G,gBAAqC,OAArB2B,EAAMK,KAAKC,UAIR,SAAAuF,GACvB,MAAO,CACH+H,OAAQ,SAAClI,EAAMC,EAASC,GAAhB,OAA6BC,EAASoG,GAAavG,EAAMC,EAASC,QAKnExF,CAA4CoN,ICjJrDU,G,4LAGEjO,KAAK/C,MAAMiR,a,+BAGX,OACI,kBAAC,KAAD,CAAUtQ,GAAG,U,GAPJ+J,IAAMzH,WAkBZC,eAAQ,MANI,SAAAyF,GACvB,MAAO,CACHsI,SAAU,kBAAMtI,EZOb,CACHpF,KCVmB,oBWMZL,CAAiC8N,ICGjCE,OAhBf,WACE,OACE,6BACI,kBAAC,EAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO5B,KAAK,QAAQE,UAAWc,KAC/B,kBAAC,KAAD,CAAOhB,KAAK,YAAYE,UAAWR,KACnC,kBAAC,KAAD,CAAOM,KAAK,UAAUE,UAAWS,KACjC,kBAAC,KAAD,CAAOX,KAAK,UAAUE,UAAWwB,KACjC,kBAAC,KAAD,CAAO1B,KAAK,IAAIzO,OAAK,EAAC2O,UAAW5F,SCPzBuH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/B,MACvB,2D,aClBOgC,GAAe,SAACC,EAAUC,GACnC,OAAO,eACAD,EADP,GAEOC,ICALC,GAAc,CAChBtN,YAAY,KACZ6C,WAAW,EACXY,OAAM,EACN8J,UAAS,GAGPC,GAAoB,CACtBC,MAAM,GACNC,OAAO,GACPC,KAAK,IACLC,MAAM,IAGJC,GAAgB,SAACnP,EAAMoP,GACzB,IAAMC,EAAgB,gBAAMD,EAAOrH,eAAgB/H,EAAMsB,YAAY8N,EAAOrH,gBAAkB,GAExFuH,EAAe,CACjBhO,YAFsBmN,GAAazO,EAAMsB,YAAY+N,GAGrDlL,WAAWnE,EAAMmE,WAAa2K,GAAkBM,EAAOrH,gBACvD8G,UAAS,GAEb,OAAOJ,GAAazO,EAAMsP,IAGxBC,GAAmB,SAACvP,EAAMoP,GAC5B,IAAMC,EAAgB,gBAAMD,EAAOrH,eAAgB/H,EAAMsB,YAAY8N,EAAOrH,gBAAkB,GAExFuH,EAAe,CACjBhO,YAFsBmN,GAAazO,EAAMsB,YAAY+N,GAGrDlL,WAAWnE,EAAMmE,WAAa2K,GAAkBM,EAAOrH,gBACvD8G,UAAS,GAEb,OAAOJ,GAAazO,EAAMsP,IAGxBE,GAAiB,SAACxP,EAAMoP,GAC1B,OAAOX,GAAazO,EAAM,CACtBsB,YAAY,CACRyN,MAAMK,EAAO9N,YAAYyN,MACzBG,MAAME,EAAO9N,YAAY4N,MACzBF,OAAOI,EAAO9N,YAAY0N,OAC1BC,KAAKG,EAAO9N,YAAY2N,MAE5BlK,OAAM,EACNZ,WAAW,EACX0K,UAAS,KAIXY,GAAkB,SAACzP,EAAMoP,GAAP,OAAkBX,GAAazO,EAAM,CAAC+E,OAAM,KAmBrD2K,GAjBC,WAAgC,IAA/B1P,EAA8B,uDAAxB4O,GAAaQ,EAAW,uCAC3C,OAAOA,EAAO3O,MACV,IfzDqB,kBe0DjB,OAAO0O,GAAcnP,EAAMoP,GAC/B,If1DwB,qBe2DpB,OAAOG,GAAiBvP,EAAMoP,GAClC,If3DqB,kBe4DjB,OAAOI,GAAexP,EAAMoP,GAChC,If5D8B,2Be6D1B,OAAOK,GAAgBzP,GAC3B,QACI,OAAOA,IC9Db4O,GAAc,CAChBvB,OAAO,GACPhD,SAAQ,EACRkC,WAAU,GAiCCmD,GA7BC,WAAgC,IAA/B1P,EAA8B,uDAAxB4O,GAAaQ,EAAW,uCAC3C,OAAQA,EAAO3O,MACX,IhBR2B,wBgBSvB,OAAOgO,GAAazO,EAAM,CAACqK,SAAQ,IACvC,IhBT6B,0BgBUzB,IAAMsF,EAAUlB,GAAaW,EAAOpE,UAAU,CAACS,GAAG2D,EAAOtD,UACzD,OAAO2C,GAAazO,EAAM,CACtBqK,SAAQ,EACRkC,WAAU,EACVc,OAAOrN,EAAMqN,OAAOrL,OAAO2N,KAEnC,IhBf4B,yBgBgBxB,OAAOlB,GAAazO,EAAM,CAACqK,SAAQ,IACvC,IhBhBoB,gBgBiBhB,OAAOoE,GAAazO,EAAM,CAACuM,WAAU,IACzC,IhBduB,mBgBenB,OAAOkC,GAAazO,EAAM,CAACqK,SAAQ,IACvC,IhBlBwB,oBgBmBpB,OAAOoE,GAAazO,EAAM,CAAEqK,SAAQ,IACxC,IhBnB0B,sBgBoBtB,OAAOoE,GAAazO,EAAM,CACtBqN,OAAO+B,EAAO/B,OACdhD,SAAQ,IAEhB,QACI,OAAOrK,ICjCb4O,GAAe,CACjBtO,MAAM,KACN6F,OAAO,KACPpB,MAAM,KACNsF,SAAQ,GAGNuF,GAAY,SAAC5P,EAAMoP,GACrB,OAAQX,GAAazO,EAAM,CAAC+E,MAAM,KAAKsF,SAAQ,KAG7CwF,GAAc,SAAC7P,EAAMoP,GACvB,OAAOX,GAAazO,EAAM,CACtBM,MAAM8O,EAAO9I,QACbH,OAAOiJ,EAAOjJ,OACdpB,MAAM,KACNsF,SAAQ,KAIVyF,GAAW,SAAC9P,EAAMoP,GACpB,OAAOX,GAAazO,EAAM,CACtB+E,MAAMqK,EAAOrK,MACbsF,SAAQ,KAIV0F,GAAa,SAAC/P,EAAMoP,GACtB,OAAOX,GAAazO,EAAM,CACtBM,MAAM,KACN6F,OAAO,QAmBAuJ,GAfC,WAAiC,IAA/B1P,EAA8B,uDAAxB4O,GAAaQ,EAAW,uCAC5C,OAAQA,EAAO3O,MACX,IjBzBkB,aiB0Bd,OAAOmP,GAAU5P,GACrB,IjBzBoB,eiB0BhB,OAAO6P,GAAY7P,EAAMoP,GAC7B,IjB5BiB,YiB6Bb,OAAOU,GAAS9P,EAAMoP,GAC1B,IjB5BmB,ciB6Bf,OAAOW,GAAW/P,GACtB,QACI,OAAOA,I,SCnCbgQ,GAAmB1B,OAAO2B,sCAAwCC,KAElEC,GAAcC,aAAgB,CAChCvI,cAAcwI,GACdtF,MAAMuF,GACNjQ,KAAKkQ,KAGHC,GAAQC,aAAYN,GAAYH,GAClCU,aAAgBC,QAGdC,GACF,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAOZK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SL8FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjL,MAAK,SAAAkL,GACjCA,EAAaC,kB","file":"static/js/main.389c95f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__UL1Qk\",\"BreadTop\":\"BurgerIngredient_BreadTop__24QCx\",\"Seeds1\":\"BurgerIngredient_Seeds1__V4SDy\",\"Seeds2\":\"BurgerIngredient_Seeds2__pT6FV\",\"Meat\":\"BurgerIngredient_Meat__3Fm2w\",\"Cheese\":\"BurgerIngredient_Cheese__3bGmv\",\"Salad\":\"BurgerIngredient_Salad__1DXKU\",\"Bacon\":\"BurgerIngredient_Bacon__1QuFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__L3vS5\",\"Label\":\"BuildControl_Label__UJxe4\",\"Less\":\"BuildControl_Less__28OfZ\",\"More\":\"BuildControl_More__2hnrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1TCTD\",\"Logo\":\"Toolbar_Logo__2_Vd8\",\"DesktopOnly\":\"Toolbar_DesktopOnly__jyz2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3D3Yi\",\"Open\":\"SideDrawer_Open__1ZN5A\",\"Close\":\"SideDrawer_Close__3ohGE\",\"Logo\":\"SideDrawer_Logo__21zLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3BuOy\",\"Label\":\"Input_Label__cfpa2\",\"InputElement\":\"Input_InputElement__3o5ui\",\"Invalid\":\"Input_Invalid__2_Kl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1jc5I\",\"active\":\"NavigationItem_active__thpgD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2P2Pm\",\"OrderButton\":\"BuildControls_OrderButton__JDuRz\",\"enable\":\"BuildControls_enable__2ihHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__11-fQ\",\"Success\":\"Button_Success__2etS4\",\"Danger\":\"Button_Danger__23vYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__wDh1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__13Uw7\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3b8Xd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__uA8_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1-Spq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2aEAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2y6Uw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1vGZm\",\"load2\":\"Spinner_load2__3XfXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckOutSummary\":\"CheckOutSummary_CheckOutSummary__n1g6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2DuDM\",\"Input\":\"ContactData_Input__1wmly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__31gYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2IqmA\",\"Input\":\"Auth_Input__19gfY\"};","import React from 'react'\r\nimport classes from './Logo.module.css'\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\n\r\n\r\nconst logo = (props) => (\r\n\r\n    <div className={classes.Logo} style={{height:props.height}}>\r\n        <img src={burgerLogo} alt=\"My Burger\"/>\r\n    </div>\r\n\r\n);\r\n\r\nexport default logo;","import React from 'react'\r\nimport classes from './NavigationItem.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst navigationItem = (props) => (\r\n<li className={classes.NavigationItem}><NavLink to={props.link} exact={props.exact} activeClassName={classes.active}>{props.children}</NavLink></li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react'\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = (props) => (\r\n    \r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> :null}\r\n        {!props.isAuthenticated ? \r\n        <NavigationItem link=\"/auth\">Auth</NavigationItem>:\r\n        <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n    \r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react'\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.clicked}/>\r\n        \r\n        <div className={classes.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        \r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\n\r\nconst sideDrawer =(props) => {\r\n\r\n    const attachedClass = [classes.SideDrawer]\r\n    if(!props.open){\r\n        attachedClass.push(classes.Close)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClass.join(\" \")}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </React.Fragment>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React,{Component} from 'react'\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../Navigation/SideDrawer/SideDrawer'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Layout extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            showSideDrawer:false\r\n        }\r\n    }\r\n\r\n    sideDrawerClosedHandler = () =>{\r\n        this.setState({\r\n            showSideDrawer:false\r\n        })\r\n    }\r\n\r\n    menuClickHandler = () => {\r\n        const oldState = this.state.showSideDrawer\r\n        this.setState({\r\n            showSideDrawer:!oldState\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Toolbar \r\n                isAuth={this.props.isAuthenticated}\r\n                clicked={this.menuClickHandler}/>\r\n                <SideDrawer \r\n                isAuth={this.props.isAuthenticated}\r\n                open={this.state.showSideDrawer} \r\n                closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n    \r\nconst mapStateToProps = () => state =>{\r\n    return {\r\n        isAuthenticated: state.auth.token != null\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react'\nimport classes from './BurgerIngredient.module.css'\nimport PropTypes from 'prop-types'\n\n\n\n\nconst burgerIngrendient = (props) => {\n    let ingredient = null;\n\n    switch (props.type){\n        case('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            );\n            break;\n        case('meat'):\n            ingredient = <div className={classes.Meat}></div>;\n            break;\n        case('cheese'):\n            ingredient = <div className={classes.Cheese}></div>;\n            break;\n        case('bacon'):\n            ingredient = <div className={classes.Bacon}></div>;\n            break;\n        case('salad'):\n            ingredient = <div className={classes.Salad}></div>;\n            break;\n        default:\n            ingredient = null;\n            break;\n    }\n    return ingredient;\n\n}\n\n\nburgerIngrendient.propTypes={\n    type:PropTypes.string.isRequired\n\n}\n\nexport default burgerIngrendient;","import React from 'react'\r\nimport classes from './Burger.module.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst burger = (props) => {\r\n\r\n\r\n    let burgerIngredients = Object.keys(props.ingredients).map((el) => {\r\n        return [...Array(props.ingredients[el])].map((_,i) =>{\r\n            return <BurgerIngredient key={el+i} type={el}/>\r\n        })\r\n    }).reduce((arr,el) =>{\r\n        return arr.concat(el)\r\n    },[])\r\n    if(burgerIngredients.length ===0){\r\n        burgerIngredients=<p>Start adding ingredients</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {burgerIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default burger;","import React from 'react'\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => {\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button className={classes.Less} onClick={() => props.clickedRemove(props.type)} disabled={props.disabled}>LESS</button>\r\n            <button className={classes.More} onClick={() => props.clickedAdd(props.type)}>MORE</button>\r\n        </div>\r\n    );\r\n    \r\n\r\n}\r\n\r\nexport default buildControl;","import React from \"react\"\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\n\r\nconst controls =[\r\n    {label:'Salad',type:'salad'},\r\n    {label:'Bacon',type:'bacon'},\r\n    {label:'Cheese',type:'cheese'},\r\n    {label:'Meat',type:'meat'}\r\n];\r\n\r\n\r\n\r\nconst buildControls = (props) =>{\r\n\r\n    \r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current Price:{props.price.toFixed(2)}</p>\r\n            {controls.map(ctrl => <BuildControl key={ctrl.label} label={ctrl.label} clickedAdd={props.clickedAdd} clickedRemove={props.clickedRemove} disabled={props.disableInfo[ctrl.type]} type={ctrl.type}/>)}\r\n            <button className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.purchasing}\r\n            >{props.isAuth ? 'ORDER NOW' : \"SIGN UP TO ORDER\"}</button>\r\n       </div>\r\n    )\r\n    \r\n\r\n}\r\n\r\n\r\nexport default buildControls;","import React,{Component} from 'react'\r\nimport classes from './Modal.module.css'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component{\r\n\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.show !==this.props.show || nextProps.children !== this.props.children\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div className={classes.Modal} style={{\r\n                transform:this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: this.props.show ? 1 : 0\r\n                }}>\r\n                {this.props.children}\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Modal;","import React from 'react'\nimport classes from './Button.module.css'\n\n\n\nconst button = (props) => (\n    <button className={[classes.Button,classes[props.btnType]].join(' ')} disabled={props.disabled} onClick={props.clicked}>{props.children}</button>\n)\n\n\nexport default button;","import React ,{Component}from 'react'\r\nimport Button from '../../UI/Button/Button'\r\n\r\n\r\nclass OrderSummary extends Component{\r\n\r\n\r\n\r\n    render(){\r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igkey =>{\r\n            return (\r\n                <li key={igkey}><span style={{textTransform:'capitalize'}}>{igkey}</span>:{this.props.ingredients[igkey]}</li>\r\n            )\r\n        })\r\n        return(\r\n            <React.Fragment>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price:{this.props.totalPrice.toFixed(2)}</strong></p>\r\n                <p>continue to check out?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>Cancel</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>Continue</Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n    \r\n\r\n\r\nexport default OrderSummary;","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://astute-sky-251305.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = (props) => {\r\n\r\n    return(\r\n        <div className={classes.loader}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default spinner;","import React ,{ Component }from 'react'\r\nimport Modal from '../../UI/Modal/Modal'\r\n\r\nconst withErrorHandler = (Wrapper,axios) => {\r\n    return class extends Component{\r\n\r\n        constructor(props){\r\n            super(props)\r\n            this.state = {\r\n                error:null\r\n            }\r\n        }\r\n\r\n        componentWillMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({\r\n                    error:null\r\n                })\r\n                return req\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res,error => {\r\n                this.setState({error:error})\r\n            })\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n\r\n        errorConfirmHandler = () => {\r\n            this.setState({\r\n                error:null\r\n            })\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <React.Fragment>\r\n                <Modal show={this.state.error} modalClosed={this.errorConfirmHandler}>\r\n                    {this.state.error ? this.state.error.message:null}\r\n                </Modal>\r\n                <Wrapper {...this.props}/>\r\n            </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withErrorHandler;","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type:actionTypes.AUTH_START\r\n    }\r\n};\r\n\r\n\r\nexport const authSuccess = (token,userId) => {\r\n    return {\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId:userId\r\n    }\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type:actionTypes.AUTH_FAIL,\r\n        error:error\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type:actionTypes.AUTH_LOGOUT,\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    console.log(expirationTime)\r\n    return dispatch => {\r\n        setTimeout(() =>{\r\n            dispatch(logout())\r\n        },expirationTime * 1000)\r\n    }\r\n}\r\n\r\n\r\nexport const auth = (email,password,isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken:true\r\n        }\r\n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDZT-5sz9h1hVxVuf_dVcVSsrP2mzNqaDk\"\r\n        if(isSignup){\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDZT-5sz9h1hVxVuf_dVcVSsrP2mzNqaDk\"\r\n        }\r\n        axios.post(url,authData)\r\n        .then(res =>{\r\n            dispatch(authSuccess(res.data.idToken,res.data.localId))\r\n            dispatch(checkAuthTimeout(res.data.expiresIn))\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data.error))\r\n        })\r\n    }\r\n}","export const ADD_INGREDIENTS=\"ADD_INGREDIENTS\";\r\nexport const REMOVE_INGREDIENTS=\"REMOVE_INGREDIENTS\";\r\nexport const SET_INGREDIENTS=\"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED=\"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const PURCHASE_BURGER_START=\"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS=\"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAILED=\"PURCHASE_BURGER_FAILED\";\r\nexport const PURCHASE_INIT =\"PURCHASE_INIT\"\r\n\r\nexport const FETCH_ORDER_START =\"FETCH_ORDER_START\"\r\nexport const FETCH_ORDER_SUCCESS =\"FETCH_ORDER_SUCCESS\"\r\nexport const FETCH_ORDER_FAIL =\"FETCH_ORDER_FAIL\"\r\n\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_FAIL = 'AUTH_FAIL'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n","import React from 'react'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuilderControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders'\r\nimport Loader from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../components/hoc/withErrorHandler/withErrorHandle'\r\nimport {connect } from 'react-redux'\r\nimport * as actions from '../../components/store/actions/index'\r\n\r\n\r\n\r\n\r\n\r\nclass BurgerBuilder extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            purchasing:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState = (updatedIngredients) => {\r\n        const ingredients = {\r\n            ...updatedIngredients\r\n        };\r\n        const sum = Object.keys(ingredients).reduce((sum,el)=>{\r\n            return sum + ingredients[el]\r\n        },0)\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({\r\n                purchasing:true\r\n            })\r\n        }else{\r\n            this.props.history.push('/auth')\r\n        }\r\n        \r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing:false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase()\r\n        this.props.history.push('/checkout');\r\n    }\r\n    render(){\r\n        const disableInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disableInfo){\r\n            disableInfo[key] = disableInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null\r\n\r\n        \r\n        let burger = this.props.error ? <p>ingredients cannot be loaded</p> : <Loader/>\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <React.Fragment>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuilderControls \r\n                        clickedAdd={this.props.onIngredientAdded} \r\n                        clickedRemove={this.props.onIngredientRemoved} \r\n                        disableInfo={disableInfo} \r\n                        price={this.props.totalPrice}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        purchasing={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}\r\n                    />\r\n                </React.Fragment>\r\n            )\r\n            orderSummary = <OrderSummary totalPrice={this.props.totalPrice} ingredients={this.props.ings} purchaseCancelled={this.purchaseCancelHandler} purchaseContinued={this.purchaseContinueHandler}/>\r\n        }\r\n                \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings:state.burgerBuilder.ingredients,\r\n        totalPrice:state.burgerBuilder.totalPrice,\r\n        error:state.error,\r\n        isAuthenticated:state.auth.token !== null\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToState = dispatch =>{\r\n    return {\r\n        onIngredientAdded :(ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved :(ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients:() => dispatch(actions.initIngredient()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToState)(withErrorHandler(BurgerBuilder,axios));","import * as actionTypes from './actionTypes'\r\nimport axios from '../../../axios-orders'\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type:actionTypes.ADD_INGREDIENTS,\r\n        ingredientName:name\r\n    }\r\n} \r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type:actionTypes.REMOVE_INGREDIENTS,\r\n        ingredientName:name\r\n    }\r\n} \r\n\r\nexport const setIngredient = (Ingredient) => {\r\n    return {\r\n        type:actionTypes.SET_INGREDIENTS,\r\n        ingredients:Ingredient\r\n    };\r\n} \r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type:actionTypes.FETCH_INGREDIENTS_FAILED,\r\n    }\r\n}\r\n\r\nexport const initIngredient = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n        .then(res => {\r\n            dispatch(setIngredient(res.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        })\r\n    };\r\n} ","import * as actionTypes from './actionTypes'\r\nimport axios from '../../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id,orderData) => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n    }\r\n}\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_FAILED,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_START,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth='+token,orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess(response.data.name,orderData))\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_SUCCESS,\r\n        orders:orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const fetOrdersStart = () => {\r\n    return{\r\n        type:actionTypes.FETCH_ORDER_START\r\n    }\r\n}\r\n\r\nexport const fetchAllOrders = (token) => {\r\n    return dispatch => {\r\n        dispatch(fetOrdersStart())\r\n        axios.get('/orders.json?auth='+token)\r\n        .then(res => {\r\n            const fetchOrders = []\r\n            for(let key in res.data){\r\n                fetchOrders.push({\r\n                    ...res.data[key],\r\n                    id:key  \r\n                })\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchOrders))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchOrdersFail(error))\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckOutSummary.module.css'\r\n\r\nconst checkOutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckOutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width:'100%',margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>Continue</Button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default checkOutSummary;","import classes from './Input.module.css'\nimport React from 'react'\n\n\nconst input = (props) =>{\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    if(props.inValid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n    switch(props.elementType){\n        case('input'):\n            inputElement=<input className={inputClasses.join(\" \")} onChange={props.changed} {...props.elementConfig} value={props.value}/>\n            break\n        case('textarea'):\n            inputElement=<textarea className={inputClasses.join(\" \")} onChange={props.changed} {...props.elementConfig} value={props.value}/>\n            break\n        case('select'):\n            inputElement=<select \n                className={inputClasses.join(\" \")} onChange={props.changed} \n                value={props.value}>\n                    {props.elementConfig.options.map(option => (\n                            <option \n                                key={option.value}\n                                value={option.value} >\n                                {option.displayValue}\n                            </option>\n                            )\n                        )\n                    }\n            </select>\n            break\n        default:\n            inputElement=<input className={inputClasses.join(\" \")} onChange={props.changed} {...props.elementConfig} value={props.value}/>\n    }\n\n\n    return(\n        <div>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\n\nexport default input;","import React from 'react'\nimport Button from '../../../components/UI/Button/Button'\nimport classes from './ContactData.module.css'\nimport axios from '../../../axios-orders'\nimport Loader from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport {connect} from 'react-redux'\nimport withErrorHandler from '../../../components/hoc/withErrorHandler/withErrorHandle'\nimport * as actions from '../../../components/store/actions/index'\n\nclass ContactData extends React.Component{\n\n\n    state={\n        orderForm:{\n            name:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your name'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            street:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your street'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            zipcode:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your zipcode'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            country:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your country'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'your email'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3\n                },\n                valid:false,\n                touched:false\n            },\n            deliverMethod:{\n                elementType:'select',\n                elementConfig:{\n                    options:[\n                        {value:'fastest',displayValue:'Fastest'},\n                        {value:'cheapest',displayValue:'Cheapest'}\n                    ]\n                },\n                validation:{},\n                value:'fastest',\n                valid:true,\n            }\n        },\n        formIsValid:false,\n        loading:false   \n    }\n\n\n    checkValidity = (value,rules) => {\n        let isValid = true\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid\n        }\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength && isValid\n        }\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength && isValid\n        }\n        return isValid;\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for(let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] =this.state.orderForm[formElementIdentifier].value\n        }\n        const order = {\n            ingredients:this.props.ingredients,\n            price:this.props.totalPrice,\n            orderData:formData\n             \n        }\n        this.props.onOrderBurger(order,this.props.token)\n        \n    }\n\n    inputChangedHandler =(event,inputIdentifier) => {\n\n        const updatedForm ={\n            ...this.state.orderForm\n        }\n        const updatedFormElement = {\n            ...updatedForm[inputIdentifier]\n        }\n        updatedFormElement.value = event.target.value\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation)\n        updatedFormElement.touched=true\n        updatedForm[inputIdentifier] = updatedFormElement\n        let formIsValid = true\n        for (let inputIdentifierElement in updatedForm){\n            formIsValid = updatedForm[inputIdentifierElement].valid && formIsValid\n        }\n        this.setState({\n            orderForm:updatedForm,\n            formIsValid:formIsValid\n        })\n    }\n\n\n    render(){\n\n        const formElementArray = [];\n        for(let key in this.state.orderForm){\n            formElementArray.push({\n                id:key,\n                config:this.state.orderForm[key]\n            })\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementArray.map(el => (<Input \n                shouldValidate={el.config.validation}\n                inValid={!el.config.valid}\n                touched={el.config.touched}\n                changed={(event) => this.inputChangedHandler(event,el.id)} \n                key={el.id} \n                elementType={el.config.elementType} \n                elementConfig={el.config.elementConfig} \n                value={el.config.value} \n                />))}\n                \n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Order</Button>\n                {this.state.formIsValid}\n            </form>\n        );\n        if (this.props.loading){\n            form = <Loader/>\n        }\n        \n        return(\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return{\n        ingredients:state.burgerBuilder.ingredients,\n        totalPrice:state.burgerBuilder.totalPrice,\n        loading:state.order.loading,\n        token:state.auth.token\n    }\n    \n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger:(orderData) => dispatch(actions.purchaseBurger(orderData))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));\n","import React,{Component} from 'react'\r\nimport CheckOutSummary from '../../components/Order/CheckOutSummary/CheckOutSummary'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport ContactData from './ContactData/ContactData'\r\nimport {connect} from 'react-redux'\r\n\r\nclass CheckOut extends Component{\r\n\r\n    checkoutCancelled = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinued =() => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        let summary = <Redirect to=\"/\"/>\r\n        if(this.props.ingredients){\r\n            \r\n            const puchasedRedirect = this.props.purchased ? <Redirect to='/'/> : null\r\n            summary =(\r\n                <div>\r\n                    {puchasedRedirect}\r\n                    <CheckOutSummary checkoutCancelled={this.checkoutCancelled} checkoutContinued={this.checkoutContinued} ingredients={this.props.ingredients}/>\r\n                    <Route path={this.props.match.path + \"/contact-data\"} \r\n                    component={ContactData}/>\r\n                </div>\r\n            )\r\n        }\r\n        return summary\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ingredients:state.burgerBuilder.ingredients,\r\n        purchased:state.order.purchased\r\n       \r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CheckOut);","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name:ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map((el) => {\r\n    return <span \r\n                style={{\r\n                    textTransform:'capitalize',\r\n                    display:'inline-block',\r\n                    margin:'0 8px',\r\n                    border:'1px solid #ccc',\r\n                    padding:'5px'\r\n                }} \r\n                key={el.name}>{el.name}({el.amount})\r\n            </span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients:{ingredientOutput}</p>\r\n            <p>price:<strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n\r\n\r\nexport default order;","import React,{Component} from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../components/hoc/withErrorHandler/withErrorHandle'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../components/store/actions/index'\r\nimport Loader from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component{\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token)\r\n    }\r\n\r\n    render(){\r\n        let orders = <Loader/>\r\n        if(!this.props.loading){\r\n            orders = (\r\n                <div>\r\n                    {this.props.orders.map((el) =>{\r\n                        return (\r\n                            <Order key={el.id} ingredients={el.ingredients} price={el.price}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n        return orders\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        loading:state.order.loading,\r\n        orders:state.order.orders,\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders:(token) => dispatch(actions.fetchAllOrders(token))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","import React,{Component} from 'react'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport classes from './Auth.module.css'\r\nimport * as actions from '../../components/store/actions/index'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls:{\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Mail Address'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            }\r\n        },\r\n        isSignup:false\r\n    }\r\n\r\n    checkValidity = (value,rules) => {\r\n        let isValid = true\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event,controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName] : {\r\n                ...this.state.controls[controlName],\r\n                value:event.target.value,\r\n                valid:this.checkValidity(event.target.value,this.state.controls[controlName].validation),\r\n                touched:true\r\n            }\r\n        }\r\n        this.setState({controls:updatedControls})\r\n    }\r\n\r\n    submitHandler =(event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignup)\r\n    }\r\n\r\n    switchAuthHandler = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignup:!prevState.isSignup\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const formElementArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementArray.push({\r\n                id:key,\r\n                config:this.state.controls[key]\r\n            })\r\n        }\r\n\r\n        let form = formElementArray.map(el =>(\r\n            <Input \r\n                key={el.id}\r\n                shouldValidate={el.config.validation}\r\n                inValid={!el.config.valid}\r\n                touched={el.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event,el.id)} \r\n                elementType={el.config.elementType} \r\n                elementConfig={el.config.elementConfig} \r\n                value={el.config.value} \r\n            />\r\n            \r\n        ))\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n\r\n        let errorMessage = null\r\n        if(this.props.error){\r\n            errorMessage = (<p>{this.props.error.message}</p>)\r\n        }\r\n\r\n        let authRedirect = null\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to=\"/\"/>\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">Submit</Button>\r\n                </form>\r\n                <Button btnType=\"Danger\" clicked={this.switchAuthHandler}>Switch to {this.state.isSignup ? \"Sign up\" : \"Sign in\"}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading:state.auth.loading,\r\n        error:state.auth.error,\r\n        isAuthenticated:state.auth.token !== null\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email,password,isSignup) => dispatch(actions.auth(email,password,isSignup))\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../../components/store/actions/index'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Logout extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n    render(){\r\n        return (\r\n            <Redirect to=\"/\"/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout)","import React from 'react';\n\nimport Layout from './components/hoc/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport CheckOut from './containers/CheckOut/CheckOut'\nimport {Route,Switch} from 'react-router-dom'\nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Auth/Auth'\nimport Logout from './containers/Auth/Logout/Logout'\n \nfunction App() {\n  return (\n    <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/checkout\" component={CheckOut} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject,updateProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updateProperties\r\n    };\r\n}","import * as actionType from '../actions/actionTypes'\r\nimport {updateObject} from '../utility'\r\n\r\nconst initialState ={\r\n    ingredients:null,\r\n    totalPrice:4,\r\n    error:false,\r\n    building:false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad:0.5,\r\n    cheese:0.4,\r\n    meat:1.3,\r\n    bacon:0.7\r\n}\r\n\r\nconst addIngredient = (state,action) => {\r\n    const updateIngredient = { [action.ingredientName]:state.ingredients[action.ingredientName] + 1}\r\n    const updateIngredients = updateObject(state.ingredients,updateIngredient)\r\n    const updatedState = {\r\n        ingredients:updateIngredients,\r\n        totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building:true\r\n    }\r\n    return updateObject(state,updatedState);\r\n} \r\n\r\nconst removeIngredient = (state,action) => {\r\n    const updateIngredient = { [action.ingredientName]:state.ingredients[action.ingredientName] - 1}\r\n    const updateIngredients = updateObject(state.ingredients,updateIngredient)\r\n    const updatedState = {\r\n        ingredients:updateIngredients,\r\n        totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building:true\r\n    }\r\n    return updateObject(state,updatedState);\r\n}\r\n\r\nconst setIngredients = (state,action) => {\r\n    return updateObject(state,{\r\n        ingredients:{\r\n            salad:action.ingredients.salad,\r\n            bacon:action.ingredients.bacon,\r\n            cheese:action.ingredients.cheese,\r\n            meat:action.ingredients.meat,\r\n        },\r\n        error:false,\r\n        totalPrice:4,\r\n        building:false\r\n    })\r\n}\r\n\r\nconst fetchIngredient = (state,action) => updateObject(state,{error:true})\r\n\r\nconst reducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case actionType.ADD_INGREDIENTS:\r\n            return addIngredient(state,action)\r\n        case actionType.REMOVE_INGREDIENTS:\r\n            return removeIngredient(state,action)\r\n        case actionType.SET_INGREDIENTS:\r\n            return setIngredients(state,action)\r\n        case actionType.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredient(state,action)\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from '../utility'\r\n\r\n\r\nconst initialState ={\r\n    orders:[],\r\n    loading:false,\r\n    purchased:false\r\n\r\n}\r\n\r\nconst reducer = (state=initialState,action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state,{loading:true})\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder =updateObject(action.orderData,{id:action.orderId})\r\n            return updateObject(state,{\r\n                loading:false,\r\n                purchased:true,\r\n                orders:state.orders.concat(newOrder)\r\n            })\r\n        case actionTypes.PURCHASE_BURGER_FAILED:\r\n            return updateObject(state,{loading:false})\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state,{purchased:false})\r\n        case actionTypes.FETCH_ORDER_FAIL:\r\n            return updateObject(state,{loading:false})\r\n        case actionTypes.FETCH_ORDER_START:\r\n            return updateObject(state,{ loading:true})\r\n        case actionTypes.FETCH_ORDER_SUCCESS:\r\n            return updateObject(state,{ \r\n                orders:action.orders,\r\n                loading:false\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from '../utility'\r\n\r\nconst initialState = {\r\n    token:null,\r\n    userId:null,\r\n    error:null,\r\n    loading:false\r\n}\r\n\r\nconst authStart = (state,action) => {\r\n    return  updateObject(state,{error:null,loading:true})\r\n}\r\n\r\nconst authSuccess = (state,action) => {\r\n    return updateObject(state,{\r\n        token:action.idToken,\r\n        userId:action.userId,\r\n        error:null,\r\n        loading:false\r\n    })\r\n}\r\n\r\nconst authFail = (state,action) => {\r\n    return updateObject(state,{\r\n        error:action.error,\r\n        loading:false\r\n    })\r\n}\r\n\r\nconst authLogout = (state,action) => {\r\n    return updateObject(state,{\r\n        token:null,\r\n        userId:null\r\n    })\r\n}\r\n\r\nconst reducer = ( state=initialState,action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state,action)\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state,action)\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state,action)\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state,action)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware,compose,combineReducers} from 'redux'\nimport burgerBuilderReducer from './components/store/reducers/burgerBuilder'\nimport orderReducer from './components/store/reducers/order'\nimport authReducer from './components/store/reducers/auth'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder:burgerBuilderReducer,\n    order:orderReducer,\n    auth:authReducer\n})\n\nconst store = createStore(rootReducer,composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app =(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    \n)\n \n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}