{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckOutSummary/CheckOutSummary.module.css","containers/CheckOut/ContactData/ContactData.module.css","components/Order/Order.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","components/hoc/withErrorHandler/withErrorHandle.js","containers/BurgerBuilder/BurgerBuilder.js","components/store/actions/burgerBuilder.js","components/store/actions/actionTypes.js","components/store/actions/order.js","components/Order/CheckOutSummary/CheckOutSummary.js","components/UI/Input/Input.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/CheckOut.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","components/store/reducers/burgerBuilder.js","components/store/reducers/order.js","index.js"],"names":["module","exports","logo","props","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClass","SideDrawer","open","push","Close","Fragment","closed","join","Layout","sideDrawerClosedHandler","setState","showSideDrawer","menuClickHandler","oldState","state","this","Content","Component","burgerIngrendient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","burgerIngredients","Object","keys","ingredients","map","el","Array","_","i","BurgerIngredient","key","reduce","arr","concat","length","Burger","buildControl","BuildControl","Label","label","Less","clickedRemove","disabled","More","clickedAdd","controls","buildControls","BuildControls","price","toFixed","ctrl","disableInfo","OrderButton","purchasable","purchasing","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","igkey","textTransform","totalPrice","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","loader","withErrorHandler","Wrapper","errorConfirmHandler","error","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","updatePurchaseState","updatedIngredients","sum","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","onInitIngredients","ings","orderSummary","onIngredientAdded","onIngredientRemoved","React","connect","burgerBuilder","dispatch","ingName","ingredientName","get","then","data","catch","checkOutSummary","CheckOutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","inValid","shouldValidate","touched","Invalid","elementType","onChange","changed","elementConfig","value","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","minLength","maxLength","valid","street","zipcode","country","email","deliverMethod","formIsValid","loading","checkValidity","rules","isValid","trim","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedForm","updatedFormElement","target","inputIdentifierElement","formElementArray","id","config","form","onSubmit","Input","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","CheckOut","goBack","replace","summary","puchasedRedirect","purchased","path","match","component","amount","ingredientOutput","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchOrders","fetchOrdersFail","App","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1329f2b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__UL1Qk\",\"BreadTop\":\"BurgerIngredient_BreadTop__24QCx\",\"Seeds1\":\"BurgerIngredient_Seeds1__V4SDy\",\"Seeds2\":\"BurgerIngredient_Seeds2__pT6FV\",\"Meat\":\"BurgerIngredient_Meat__3Fm2w\",\"Cheese\":\"BurgerIngredient_Cheese__3bGmv\",\"Salad\":\"BurgerIngredient_Salad__1DXKU\",\"Bacon\":\"BurgerIngredient_Bacon__1QuFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__L3vS5\",\"Label\":\"BuildControl_Label__UJxe4\",\"Less\":\"BuildControl_Less__28OfZ\",\"More\":\"BuildControl_More__2hnrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1TCTD\",\"Logo\":\"Toolbar_Logo__2_Vd8\",\"DesktopOnly\":\"Toolbar_DesktopOnly__jyz2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3D3Yi\",\"Open\":\"SideDrawer_Open__1ZN5A\",\"Close\":\"SideDrawer_Close__3ohGE\",\"Logo\":\"SideDrawer_Logo__21zLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3BuOy\",\"Label\":\"Input_Label__cfpa2\",\"InputElement\":\"Input_InputElement__3o5ui\",\"Invalid\":\"Input_Invalid__2_Kl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1jc5I\",\"active\":\"NavigationItem_active__thpgD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2P2Pm\",\"OrderButton\":\"BuildControls_OrderButton__JDuRz\",\"enable\":\"BuildControls_enable__2ihHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__11-fQ\",\"Success\":\"Button_Success__2etS4\",\"Danger\":\"Button_Danger__23vYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__wDh1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__13Uw7\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3b8Xd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__uA8_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1-Spq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2aEAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2y6Uw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1vGZm\",\"load2\":\"Spinner_load2__3XfXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckOutSummary\":\"CheckOutSummary_CheckOutSummary__n1g6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2DuDM\",\"Input\":\"ContactData_Input__1wmly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__31gYl\"};","import React from 'react'\r\nimport classes from './Logo.module.css'\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\n\r\n\r\nconst logo = (props) => (\r\n\r\n    <div className={classes.Logo} style={{height:props.height}}>\r\n        <img src={burgerLogo} alt=\"My Burger\"/>\r\n    </div>\r\n\r\n);\r\n\r\nexport default logo;","import React from 'react'\r\nimport classes from './NavigationItem.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst navigationItem = (props) => (\r\n<li className={classes.NavigationItem}><NavLink to={props.link} exact={props.exact} activeClassName={classes.active}>{props.children}</NavLink></li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react'\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = () => (\r\n    \r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n    \r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react'\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.clicked}/>\r\n        \r\n        <div className={classes.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        \r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\n\r\nconst sideDrawer =(props) => {\r\n\r\n    const attachedClass = [classes.SideDrawer]\r\n    if(!props.open){\r\n        attachedClass.push(classes.Close)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClass.join(\" \")}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </React.Fragment>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React,{Component} from 'react'\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../Navigation/SideDrawer/SideDrawer'\r\n\r\nclass Layout extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            showSideDrawer:false\r\n        }\r\n    }\r\n\r\n    sideDrawerClosedHandler = () =>{\r\n        this.setState({\r\n            showSideDrawer:false\r\n        })\r\n    }\r\n\r\n    menuClickHandler = () => {\r\n        const oldState = this.state.showSideDrawer\r\n        this.setState({\r\n            showSideDrawer:!oldState\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Toolbar clicked={this.menuClickHandler}/>\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport default Layout;","import React from 'react'\nimport classes from './BurgerIngredient.module.css'\nimport PropTypes from 'prop-types'\n\n\n\n\nconst burgerIngrendient = (props) => {\n    let ingredient = null;\n\n    switch (props.type){\n        case('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            );\n            break;\n        case('meat'):\n            ingredient = <div className={classes.Meat}></div>;\n            break;\n        case('cheese'):\n            ingredient = <div className={classes.Cheese}></div>;\n            break;\n        case('bacon'):\n            ingredient = <div className={classes.Bacon}></div>;\n            break;\n        case('salad'):\n            ingredient = <div className={classes.Salad}></div>;\n            break;\n        default:\n            ingredient = null;\n            break;\n    }\n    return ingredient;\n\n}\n\n\nburgerIngrendient.propTypes={\n    type:PropTypes.string.isRequired\n\n}\n\nexport default burgerIngrendient;","import React from 'react'\r\nimport classes from './Burger.module.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst burger = (props) => {\r\n\r\n\r\n    let burgerIngredients = Object.keys(props.ingredients).map((el) => {\r\n        return [...Array(props.ingredients[el])].map((_,i) =>{\r\n            return <BurgerIngredient key={el+i} type={el}/>\r\n        })\r\n    }).reduce((arr,el) =>{\r\n        return arr.concat(el)\r\n    },[])\r\n    if(burgerIngredients.length ===0){\r\n        burgerIngredients=<p>Start adding ingredients</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {burgerIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default burger;","import React from 'react'\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => {\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button className={classes.Less} onClick={() => props.clickedRemove(props.type)} disabled={props.disabled}>LESS</button>\r\n            <button className={classes.More} onClick={() => props.clickedAdd(props.type)}>MORE</button>\r\n        </div>\r\n    );\r\n    \r\n\r\n}\r\n\r\nexport default buildControl;","import React from \"react\"\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\n\r\nconst controls =[\r\n    {label:'Salad',type:'salad'},\r\n    {label:'Bacon',type:'bacon'},\r\n    {label:'Cheese',type:'cheese'},\r\n    {label:'Meat',type:'meat'}\r\n];\r\n\r\n\r\n\r\nconst buildControls = (props) =>{\r\n\r\n    \r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current Price:{props.price.toFixed(2)}</p>\r\n            {controls.map(ctrl => <BuildControl key={ctrl.label} label={ctrl.label} clickedAdd={props.clickedAdd} clickedRemove={props.clickedRemove} disabled={props.disableInfo[ctrl.type]} type={ctrl.type}/>)}\r\n            <button className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.purchasing}\r\n            >ORDER NOW</button>\r\n       </div>\r\n    )\r\n    \r\n\r\n}\r\n\r\n\r\nexport default buildControls;","import React,{Component} from 'react'\r\nimport classes from './Modal.module.css'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component{\r\n\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.show !==this.props.show || nextProps.children !== this.props.children\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div className={classes.Modal} style={{\r\n                transform:this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: this.props.show ? 1 : 0\r\n                }}>\r\n                {this.props.children}\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Modal;","import React from 'react'\nimport classes from './Button.module.css'\n\n\n\nconst button = (props) => (\n    <button className={[classes.Button,classes[props.btnType]].join(' ')} disabled={props.disabled} onClick={props.clicked}>{props.children}</button>\n)\n\n\nexport default button;","import React ,{Component}from 'react'\r\nimport Button from '../../UI/Button/Button'\r\n\r\n\r\nclass OrderSummary extends Component{\r\n\r\n\r\n\r\n    render(){\r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igkey =>{\r\n            return (\r\n                <li key={igkey}><span style={{textTransform:'capitalize'}}>{igkey}</span>:{this.props.ingredients[igkey]}</li>\r\n            )\r\n        })\r\n        return(\r\n            <React.Fragment>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price:{this.props.totalPrice.toFixed(2)}</strong></p>\r\n                <p>continue to check out?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>Cancel</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>Continue</Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n    \r\n\r\n\r\nexport default OrderSummary;","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://astute-sky-251305.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = (props) => {\r\n\r\n    return(\r\n        <div className={classes.loader}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default spinner;","import React ,{ Component }from 'react'\r\nimport Modal from '../../UI/Modal/Modal'\r\n\r\nconst withErrorHandler = (Wrapper,axios) => {\r\n    return class extends Component{\r\n\r\n        constructor(props){\r\n            super(props)\r\n            this.state = {\r\n                error:null\r\n            }\r\n        }\r\n\r\n        componentWillMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({\r\n                    error:null\r\n                })\r\n                return req\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res,error => {\r\n                this.setState({error:error})\r\n            })\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n\r\n        errorConfirmHandler = () => {\r\n            this.setState({\r\n                error:null\r\n            })\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <React.Fragment>\r\n                <Modal show={this.state.error} modalClosed={this.errorConfirmHandler}>\r\n                    {this.state.error ? this.state.error.message:null}\r\n                </Modal>\r\n                <Wrapper {...this.props}/>\r\n            </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withErrorHandler;","import React from 'react'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuilderControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders'\r\nimport Loader from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../components/hoc/withErrorHandler/withErrorHandle'\r\nimport {connect } from 'react-redux'\r\nimport * as actions from '../../components/store/actions/index'\r\n\r\n\r\n\r\n\r\n\r\nclass BurgerBuilder extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            purchasing:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState = (updatedIngredients) => {\r\n        const ingredients = {\r\n            ...updatedIngredients\r\n        };\r\n        const sum = Object.keys(ingredients).reduce((sum,el)=>{\r\n            return sum + ingredients[el]\r\n        },0)\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing:true\r\n        })\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing:false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase()\r\n        this.props.history.push('/checkout');\r\n    }\r\n    render(){\r\n        const disableInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disableInfo){\r\n            disableInfo[key] = disableInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null\r\n\r\n        \r\n        let burger = this.props.error ? <p>ingredients cannot be loaded</p> : <Loader/>\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <React.Fragment>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuilderControls clickedAdd={this.props.onIngredientAdded} clickedRemove={this.props.onIngredientRemoved} disableInfo={disableInfo} \r\n                        price={this.props.totalPrice}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        purchasing={this.purchaseHandler}\r\n                    />\r\n                </React.Fragment>\r\n            )\r\n            orderSummary = <OrderSummary totalPrice={this.props.totalPrice} ingredients={this.props.ings} purchaseCancelled={this.purchaseCancelHandler} purchaseContinued={this.purchaseContinueHandler}/>\r\n        }\r\n                \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings:state.burgerBuilder.ingredients,\r\n        totalPrice:state.burgerBuilder.totalPrice,\r\n        error:state.error\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToState = dispatch =>{\r\n    return {\r\n        onIngredientAdded :(ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved :(ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients:() => dispatch(actions.initIngredient()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToState)(withErrorHandler(BurgerBuilder,axios));","import * as actionTypes from './actionTypes'\r\nimport axios from '../../../axios-orders'\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type:actionTypes.ADD_INGREDIENTS,\r\n        ingredientName:name\r\n    }\r\n} \r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type:actionTypes.REMOVE_INGREDIENTS,\r\n        ingredientName:name\r\n    }\r\n} \r\n\r\nexport const setIngredient = (Ingredient) => {\r\n    return {\r\n        type:actionTypes.SET_INGREDIENTS,\r\n        ingredients:Ingredient\r\n    };\r\n} \r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type:actionTypes.FETCH_INGREDIENTS_FAILED,\r\n    }\r\n}\r\n\r\nexport const initIngredient = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n        .then(res => {\r\n            dispatch(setIngredient(res.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        })\r\n    };\r\n} ","export const ADD_INGREDIENTS=\"ADD_INGREDIENTS\";\r\nexport const REMOVE_INGREDIENTS=\"REMOVE_INGREDIENTS\";\r\nexport const SET_INGREDIENTS=\"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED=\"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const PURCHASE_BURGER_START=\"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS=\"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAILED=\"PURCHASE_BURGER_FAILED\";\r\nexport const PURCHASE_INIT =\"PURCHASE_INIT\"\r\n\r\nexport const FETCH_ORDER_START =\"FETCH_ORDER_START\"\r\nexport const FETCH_ORDER_SUCCESS =\"FETCH_ORDER_SUCCESS\"\r\nexport const FETCH_ORDER_FAIL =\"FETCH_ORDER_FAIL\"\r\n\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from '../../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id,orderData) => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n    }\r\n}\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_FAILED,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_START,\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json',orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess(response.data.name,orderData))\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_SUCCESS,\r\n        orders:orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const fetOrdersStart = () => {\r\n    return{\r\n        type:actionTypes.FETCH_ORDER_START\r\n    }\r\n}\r\n\r\nexport const fetchAllOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetOrdersStart())\r\n        axios.get('/orders.json')\r\n        .then(res => {\r\n            const fetchOrders = []\r\n            for(let key in res.data){\r\n                fetchOrders.push({\r\n                    ...res.data[key],\r\n                    id:key  \r\n                })\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchOrders))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchOrdersFail(error))\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckOutSummary.module.css'\r\n\r\nconst checkOutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckOutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width:'100%',margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>Continue</Button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default checkOutSummary;","import classes from './Input.module.css'\nimport React from 'react'\n\n\nconst input = (props) =>{\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    if(props.inValid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n    switch(props.elementType){\n        case('input'):\n            inputElement=<input className={inputClasses.join(\" \")} onChange={props.changed} {...props.elementConfig} value={props.value}/>\n            break\n        case('textarea'):\n            inputElement=<textarea className={inputClasses.join(\" \")} onChange={props.changed} {...props.elementConfig} value={props.value}/>\n            break\n        case('select'):\n            inputElement=<select \n                className={inputClasses.join(\" \")} onChange={props.changed} \n                value={props.value}>\n                    {props.elementConfig.options.map(option => (\n                            <option \n                                key={option.value}\n                                value={option.value} >\n                                {option.displayValue}\n                            </option>\n                            )\n                        )\n                    }\n            </select>\n            break\n        default:\n            inputElement=<input className={inputClasses.join(\" \")} onChange={props.changed} {...props.elementConfig} value={props.value}/>\n    }\n\n\n    return(\n        <div>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\n\nexport default input;","import React from 'react'\nimport Button from '../../../components/UI/Button/Button'\nimport classes from './ContactData.module.css'\nimport axios from '../../../axios-orders'\nimport Loader from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport {connect} from 'react-redux'\nimport withErrorHandler from '../../../components/hoc/withErrorHandler/withErrorHandle'\nimport * as actions from '../../../components/store/actions/index'\n\nclass ContactData extends React.Component{\n\n\n    state={\n        orderForm:{\n            name:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your name'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            street:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your street'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            zipcode:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your zipcode'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            country:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your country'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'your email'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3\n                },\n                valid:false,\n                touched:false\n            },\n            deliverMethod:{\n                elementType:'select',\n                elementConfig:{\n                    options:[\n                        {value:'fastest',displayValue:'Fastest'},\n                        {value:'cheapest',displayValue:'Cheapest'}\n                    ]\n                },\n                validation:{},\n                value:'fastest',\n                valid:true,\n            }\n        },\n        formIsValid:false,\n        loading:false   \n    }\n\n\n    checkValidity = (value,rules) => {\n        let isValid = true\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid\n        }\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength && isValid\n        }\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength && isValid\n        }\n        return isValid;\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for(let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] =this.state.orderForm[formElementIdentifier].value\n        }\n        const order = {\n            ingredients:this.props.ingredients,\n            price:this.props.totalPrice,\n            orderData:formData\n             \n        }\n        this.props.onOrderBurger(order)\n        \n    }\n\n    inputChangedHandler =(event,inputIdentifier) => {\n\n        const updatedForm ={\n            ...this.state.orderForm\n        }\n        const updatedFormElement = {\n            ...updatedForm[inputIdentifier]\n        }\n        updatedFormElement.value = event.target.value\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation)\n        updatedFormElement.touched=true\n        updatedForm[inputIdentifier] = updatedFormElement\n        let formIsValid = true\n        for (let inputIdentifierElement in updatedForm){\n            formIsValid = updatedForm[inputIdentifierElement].valid && formIsValid\n        }\n        this.setState({\n            orderForm:updatedForm,\n            formIsValid:formIsValid\n        })\n    }\n\n\n    render(){\n\n        const formElementArray = [];\n        for(let key in this.state.orderForm){\n            formElementArray.push({\n                id:key,\n                config:this.state.orderForm[key]\n            })\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementArray.map(el => (<Input \n                shouldValidate={el.config.validation}\n                inValid={!el.config.valid}\n                touched={el.config.touched}\n                changed={(event) => this.inputChangedHandler(event,el.id)} key={el.id} elementType={el.config.elementType} elementConfig={el.config.elementConfig} value={el.config.value} />))}\n                \n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Order</Button>\n                {this.state.formIsValid}\n            </form>\n        );\n        if (this.props.loading){\n            form = <Loader/>\n        }\n        \n        return(\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return{\n        ingredients:state.burgerBuilder.ingredients,\n        totalPrice:state.burgerBuilder.totalPrice,\n        loading:state.order.loading\n    }\n    \n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger:(orderData) => dispatch(actions.purchaseBurger(orderData))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));\n","import React,{Component} from 'react'\r\nimport CheckOutSummary from '../../components/Order/CheckOutSummary/CheckOutSummary'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport ContactData from './ContactData/ContactData'\r\nimport {connect} from 'react-redux'\r\n\r\nclass CheckOut extends Component{\r\n\r\n    checkoutCancelled = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinued =() => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        let summary = <Redirect to=\"/\"/>\r\n        if(this.props.ingredients){\r\n            \r\n            const puchasedRedirect = this.props.purchased ? <Redirect to='/'/> : null\r\n            summary =(\r\n                <div>\r\n                    {puchasedRedirect}\r\n                    <CheckOutSummary checkoutCancelled={this.checkoutCancelled} checkoutContinued={this.checkoutContinued} ingredients={this.props.ingredients}/>\r\n                    <Route path={this.props.match.path + \"/contact-data\"} \r\n                    component={ContactData}/>\r\n                </div>\r\n            )\r\n        }\r\n        return summary\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ingredients:state.burgerBuilder.ingredients,\r\n        purchased:state.order.purchased\r\n       \r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CheckOut);","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name:ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map((el) => {\r\n    return <span \r\n                style={{\r\n                    textTransform:'capitalize',\r\n                    display:'inline-block',\r\n                    margin:'0 8px',\r\n                    border:'1px solid #ccc',\r\n                    padding:'5px'\r\n                }} \r\n                key={el.name}>{el.name}({el.amount})\r\n            </span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients:{ingredientOutput}</p>\r\n            <p>price:<strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n\r\n\r\nexport default order;","import React,{Component} from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../components/hoc/withErrorHandler/withErrorHandle'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../components/store/actions/index'\r\nimport Loader from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component{\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.onFetchOrders()\r\n    }\r\n\r\n    render(){\r\n        let orders = <Loader/>\r\n        if(!this.props.loading){\r\n            orders = (\r\n                <div>\r\n                    {this.props.orders.map((el) =>{\r\n                        return (\r\n                            <Order key={el.id} ingredients={el.ingredients} price={el.price}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n        return orders\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        loading:state.order.loading,\r\n        orders:state.order.orders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders:() => dispatch(actions.fetchAllOrders())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","import React from 'react';\n\nimport Layout from './components/hoc/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport CheckOut from './containers/CheckOut/CheckOut'\nimport {Route,Switch} from 'react-router-dom'\nimport Orders from './containers/Orders/Orders'\n \nfunction App() {\n  return (\n    <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/burger/checkout\" component={CheckOut} />\n            <Route path=\"/burger/orders\" component={Orders} />\n            <Route path=\"/burger\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionType from '../actions/actionTypes'\r\n\r\n\r\nconst initialState ={\r\n    ingredients:null,\r\n    totalPrice:4,\r\n    error:false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad:0.5,\r\n    cheese:0.4,\r\n    meat:1.3,\r\n    bacon:0.7\r\n}\r\n\r\n\r\nconst reducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case actionType.ADD_INGREDIENTS:\r\n            return{\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actionType.REMOVE_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actionType.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients:{\r\n                    salad:action.ingredients.salad,\r\n                    bacon:action.ingredients.bacon,\r\n                    cheese:action.ingredients.cheese,\r\n                    meat:action.ingredients.meat,\r\n                },\r\n                error:false,\r\n                totalPrice:4\r\n            }\r\n        case actionType.FETCH_INGREDIENTS_FAILED:\r\n            return{\r\n                ...state,\r\n                error:true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\n\r\n\r\n\r\nconst initialState ={\r\n    orders:[],\r\n    loading:false,\r\n    purchased:false\r\n\r\n}\r\n\r\nconst reducer = (state=initialState,action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder ={\r\n                ...action.orderData,\r\n                id:action.orderId,\r\n                purchased:true\r\n            }\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                orders:state.orders.concat(newOrder)\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_FAILED:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n        case actionTypes.PURCHASE_INIT:\r\n            return{\r\n                ...state,\r\n                purchased:false\r\n            }\r\n        case actionTypes.FETCH_ORDER_FAIL:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n        case actionTypes.FETCH_ORDER_START:\r\n                return{\r\n                    ...state,\r\n                    loading:true\r\n                    \r\n                }\r\n        case actionTypes.FETCH_ORDER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                orders:action.orders,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware,compose,combineReducers} from 'redux'\nimport burgerBuilderReducer from './components/store/reducers/burgerBuilder'\nimport orderReducer from './components/store/reducers/order'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder:burgerBuilderReducer,\n    order:orderReducer\n})\n\nconst store = createStore(rootReducer,composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app =(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    \n)\n \n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}