{"version":3,"sources":["components/Order/CheckOutSummary/CheckOutSummary.module.css","containers/CheckOut/ContactData/ContactData.module.css","components/Order/CheckOutSummary/CheckOutSummary.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/CheckOut.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","checkOutSummary","props","className","classes","CheckOutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","minLength","maxLength","valid","touched","street","zipcode","country","email","deliverMethod","options","displayValue","formIsValid","loading","checkValidity","rules","isValid","trim","length","orderHandler","event","preventDefault","formData","formElementIdentifier","order","price","totalPrice","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedForm","updatedFormElement","target","inputIdentifierElement","setState","formElementArray","key","this","push","id","config","form","onSubmit","map","el","Input","shouldValidate","inValid","changed","disabled","React","Component","connect","burgerBuilder","auth","dispatch","actions","withErrorHandler","axios","CheckOut","history","goBack","replace","summary","to","puchasedRedirect","purchased","path","match","component","input","inputElement","inputClasses","InputElement","Invalid","join","onChange","option","Label","label"],"mappings":"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","file":"static/js/3.fd42a718.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckOutSummary\":\"CheckOutSummary_CheckOutSummary__n1g6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2DuDM\",\"Input\":\"ContactData_Input__1wmly\"};","import React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckOutSummary.module.css'\r\n\r\nconst checkOutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckOutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width:'100%',margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>Continue</Button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default checkOutSummary;","import React from 'react'\nimport Button from '../../../components/UI/Button/Button'\nimport classes from './ContactData.module.css'\nimport axios from '../../../axios-orders'\nimport Loader from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport {connect} from 'react-redux'\nimport withErrorHandler from '../../../components/hoc/withErrorHandler/withErrorHandle'\nimport * as actions from '../../../components/store/actions/index'\n\nclass ContactData extends React.Component{\n\n\n    state={\n        orderForm:{\n            name:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your name'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            street:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your street'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            zipcode:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your zipcode'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            country:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your country'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3,\n                    maxLength:5\n                },\n                valid:false,\n                touched:false\n            },\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'your email'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:3\n                },\n                valid:false,\n                touched:false\n            },\n            deliverMethod:{\n                elementType:'select',\n                elementConfig:{\n                    options:[\n                        {value:'fastest',displayValue:'Fastest'},\n                        {value:'cheapest',displayValue:'Cheapest'}\n                    ]\n                },\n                validation:{},\n                value:'fastest',\n                valid:true,\n            }\n        },\n        formIsValid:false,\n        loading:false   \n    }\n\n\n    checkValidity = (value,rules) => {\n        let isValid = true\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid\n        }\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength && isValid\n        }\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength && isValid\n        }\n        return isValid;\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for(let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] =this.state.orderForm[formElementIdentifier].value\n        }\n        const order = {\n            ingredients:this.props.ingredients,\n            price:this.props.totalPrice,\n            orderData:formData,\n            userId:this.props.userId\n             \n        }\n        this.props.onOrderBurger(order,this.props.token)\n        \n    }\n\n    inputChangedHandler =(event,inputIdentifier) => {\n\n        const updatedForm ={\n            ...this.state.orderForm\n        }\n        const updatedFormElement = {\n            ...updatedForm[inputIdentifier]\n        }\n        updatedFormElement.value = event.target.value\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation)\n        updatedFormElement.touched=true\n        updatedForm[inputIdentifier] = updatedFormElement\n        let formIsValid = true\n        for (let inputIdentifierElement in updatedForm){\n            formIsValid = updatedForm[inputIdentifierElement].valid && formIsValid\n        }\n        this.setState({\n            orderForm:updatedForm,\n            formIsValid:formIsValid\n        })\n    }\n\n\n    render(){\n\n        const formElementArray = [];\n        for(let key in this.state.orderForm){\n            formElementArray.push({\n                id:key,\n                config:this.state.orderForm[key]\n            })\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementArray.map(el => (<Input \n                shouldValidate={el.config.validation}\n                inValid={!el.config.valid}\n                touched={el.config.touched}\n                changed={(event) => this.inputChangedHandler(event,el.id)} \n                key={el.id} \n                elementType={el.config.elementType} \n                elementConfig={el.config.elementConfig} \n                value={el.config.value} \n                />))}\n                \n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Order</Button>\n                {this.state.formIsValid}\n            </form>\n        );\n        if (this.props.loading){\n            form = <Loader/>\n        }\n        \n        return(\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return{\n        ingredients:state.burgerBuilder.ingredients,\n        totalPrice:state.burgerBuilder.totalPrice,\n        loading:state.order.loading,\n        token:state.auth.token,\n        userId:state.auth.userId\n    }\n    \n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger:(orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));\n","import React,{Component} from 'react'\nimport CheckOutSummary from '../../components/Order/CheckOutSummary/CheckOutSummary'\nimport {Route,Redirect} from 'react-router-dom'\nimport ContactData from './ContactData/ContactData'\nimport {connect} from 'react-redux'\n\nclass CheckOut extends Component{\n\n    checkoutCancelled = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinued =() => {\n        this.props.history.replace('/checkout/contact-data');\n\n    }\n\n\n    render(){\n        let summary = <Redirect to=\"/\"/>\n        if(this.props.ingredients){\n            \n            const puchasedRedirect = this.props.purchased ? <Redirect to='/'/> : null\n            summary =(\n                <div>\n                    {puchasedRedirect}\n                    <CheckOutSummary checkoutCancelled={this.checkoutCancelled} checkoutContinued={this.checkoutContinued} ingredients={this.props.ingredients}/>\n                    <Route path={this.props.match.path + \"/contact-data\"} \n                    component={ContactData}/>\n                </div>\n            )\n        }\n        return summary\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return{\n        ingredients:state.burgerBuilder.ingredients,\n        purchased:state.order.purchased\n       \n    }\n    \n}\n\n\n\n\nexport default connect(mapStateToProps)(CheckOut);","import classes from './Input.module.css'\nimport React from 'react'\n\n\nconst input = (props) =>{\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    if(props.inValid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n    switch(props.elementType){\n        case('input'):\n            inputElement=<input className={inputClasses.join(\" \")} onChange={props.changed} {...props.elementConfig} value={props.value}/>\n            break\n        case('textarea'):\n            inputElement=<textarea className={inputClasses.join(\" \")} onChange={props.changed} {...props.elementConfig} value={props.value}/>\n            break\n        case('select'):\n            inputElement=<select \n                className={inputClasses.join(\" \")} onChange={props.changed} \n                value={props.value}>\n                    {props.elementConfig.options.map(option => (\n                            <option \n                                key={option.value}\n                                value={option.value} >\n                                {option.displayValue}\n                            </option>\n                            )\n                        )\n                    }\n            </select>\n            break\n        default:\n            inputElement=<input className={inputClasses.join(\" \")} onChange={props.changed} {...props.elementConfig} value={props.value}/>\n    }\n\n\n    return(\n        <div>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3BuOy\",\"Label\":\"Input_Label__cfpa2\",\"InputElement\":\"Input_InputElement__3o5ui\",\"Invalid\":\"Input_Invalid__2_Kl9\"};"],"sourceRoot":""}