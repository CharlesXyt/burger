{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","el","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"iLAqCeA,EAlCD,SAACC,GAEX,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KAAK,CACbC,KAAKF,EACLG,OAAOL,EAAMC,YAAYC,KAIjC,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GAC1C,OAAO,0BACKC,MAAO,CACHC,cAAc,aACdC,QAAQ,eACRC,OAAO,QACPC,OAAO,iBACPC,QAAQ,OAEZC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARvB,IAQ8BI,EAAGH,OARjC,QAYP,OACI,yBAAKW,UAAWC,IAAQC,OACpB,0CAAgBZ,GAChB,oCAAS,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,wCCrBnEC,E,4LAIEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAMF,KAAKxB,MAAM2B,U,+BAIrD,IAAIC,EAAS,kBAAC,IAAD,MAYb,OAXIJ,KAAKxB,MAAM6B,UACXD,EACI,6BACKJ,KAAKxB,MAAM4B,OAAOrB,KAAI,SAACC,GACpB,OACI,kBAACU,EAAD,CAAOH,IAAKP,EAAGsB,GAAI7B,YAAaO,EAAGP,YAAaoB,MAAOb,EAAGa,aAMvEO,M,GApBMG,aAwCNC,uBAhBS,SAAAC,GACpB,MAAM,CACFJ,QAAQI,EAAMlC,MAAM8B,QACpBD,OAAOK,EAAMlC,MAAM6B,OACnBF,MAAMO,EAAMC,KAAKR,MACjBC,OAAOM,EAAMC,KAAKP,WAIC,SAAAQ,GACvB,MAAO,CACHV,cAAc,SAACC,EAAMC,GAAP,OAAkBQ,EAASC,IAAuBV,EAAMC,QAK/DK,CAA4CK,YAAiBd,EAAOe,O,mBC/CnFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.df506602.chunk.js","sourcesContent":["import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name:ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map((el) => {\r\n    return <span \r\n                style={{\r\n                    textTransform:'capitalize',\r\n                    display:'inline-block',\r\n                    margin:'0 8px',\r\n                    border:'1px solid #ccc',\r\n                    padding:'5px'\r\n                }} \r\n                key={el.name}>{el.name}({el.amount})\r\n            </span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients:{ingredientOutput}</p>\r\n            <p>price:<strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n\r\n\r\nexport default order;","import React,{Component} from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../components/hoc/withErrorHandler/withErrorHandle'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../components/store/actions/index'\r\nimport Loader from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component{\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token,this.props.userId)\r\n    }\r\n\r\n    render(){\r\n        let orders = <Loader/>\r\n        if(!this.props.loading){\r\n            orders = (\r\n                <div>\r\n                    {this.props.orders.map((el) =>{\r\n                        return (\r\n                            <Order key={el.id} ingredients={el.ingredients} price={el.price}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n        return orders\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        loading:state.order.loading,\r\n        orders:state.order.orders,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders:(token,userId) => dispatch(actions.fetchAllOrders(token,userId))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__31gYl\"};"],"sourceRoot":""}